import os
import zipfile

from SConsCommon import *
from SConsExternCommon import *

Import('parent_env parent_targets parent_report')

if parent_env['platform_android'] != 'no':
	Return()

if parent_env['platform_webwasm']:
	Return()

if parent_env['OSBeOS']:
	Return()

envLibrary = parent_env.Clone()

sdkVersion = '1.17.0'

if envLibrary['OSWindows']:
	libFileName = 'bin/EOSSDK.dll'
	binFileName = 'bin/EOSSDK.dll'
else:
	libFileName = 'bin/libEOSSDK-Linux-Shipping.so'
	binFileName = libFileName

nodeArtifacts = envLibrary.DownloadArtifactHelper([
	'eossdk-{}.zip'.format(sdkVersion),
	'eossdk_bin_linux-{}.tar.xz'.format(sdkVersion)],
	'eossdk', 'lib_eossdk_fetch')

def unpackArchiveFileSdk(target, source, env):
	buildDir = target[0].get_dir().up()
	with zipfile.ZipFile(source[0].abspath, 'r') as f:
		f.extractall(buildDir.abspath)

def unpackArchiveFileBin(target, source, env):
	buildDir = target[0].get_dir().up()
	untarArchive(buildDir.abspath, source[0].abspath)
	
	# fix permissions to avoid problems while installing files
	for t in target:
		if t.name.endswith('.so'):
			os.chmod(t.abspath, 0o755)

targets = []
with open(envLibrary.File('header_file_list').srcnode().abspath, 'r') as f:
	targets.extend([x[:-1] for x in f.readlines()])

sdk = envLibrary.Command(targets, nodeArtifacts[0],
	envLibrary.Action(unpackArchiveFileSdk, 'Unpack EOS SDK'))
rtlib = envLibrary.Command(envLibrary.File(binFileName), nodeArtifacts[1],
	envLibrary.Action(unpackArchiveFileBin, 'Unpack EOS Libraries'))

envLibrary.Clean(sdk, ['bin', 'include'])

cpppath = [envLibrary.Dir('include')]
libpath = [envLibrary.Dir('bin')]

libs = [rtlib[0]]
runtimelibs = [rtlib[0]]

envLibrary.Alias('lib_eossdk', [sdk, rtlib])

parent_targets['lib_eossdk'] = {
	'name' : 'Epic EOS SDK',
	'cpppath' : cpppath,
	'libpath' : libpath,
	'libs' : libs,
	'runtimelibs' : runtimelibs,
	'depends' : []}
