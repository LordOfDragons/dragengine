from SConsCommon import *

Import('parent_env parent_targets parent_report')

envAsset = parent_env.Clone()

filesAsset = {}
for t in parent_targets.values():
    if 'asset-engine' in t:
        filesAsset.update(t['asset-engine'])

if not filesAsset:
    Return()

pathShare = envAsset.subst(envAsset['path_de_share'])

versionString = envAsset['version']
if envAsset['force_version']:
	versionString = envAsset['force_version']

filename = 'dragengine-{}.deal'.format(versionString)
asset = envAsset.Command(filename, filesAsset.values(),
    envAsset.Action(ArchiveZip, 'Archiving {}'.format(filename)),
    ArchiveFiles = filesAsset)

targetName = 'asset_dragengine'
envAsset.Alias('{}_build'.format(targetName), asset)

install = envAsset.Install(pathShare, asset)
targetInstall = envAsset.Alias(targetName, install)

archiveEngine = {'{}/{}'.format(pathShare, filename): asset[0]}

parent_targets[targetName] = {
    'name': 'Archive Drag[en]gine Asset',
    'asset': asset,
	'archive-engine': archiveEngine,
    'install': targetInstall,
	'install-runtime': targetInstall,
	'install-engine-runtime': targetInstall}
