/* 
 * Drag[en]gine Game Engine
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef _DEMODELTEXTURE_H_
#define _DEMODELTEXTURE_H_

#include "../../common/string/decString.h"


/**
 * \brief Model texture.
 * 
 * Faces viewn from the back side are invisible. If double-sided is set
 * back faces are also rendered as if they are front faces. This can be
 * used for thin geometry represented by a single face. THe same is true
 * for shadow casting. Back faces do not cast shadows unless double-sided
 * is set.
 * 
 * If faces are set to be rendered as decals they are rendered similar to
 * how deDecal are rendered with the difference they are not generated by
 * projecting a quadrilateral onto the mesh but using the faces instead.
 * If decal is set the decal offset parameter is used to determine the
 * amount of offset relative to other decal set textures. Larger numbers
 * cover textures with lower decal offset.
 * 
 */
class DE_DLL_EXPORT deModelTexture{
private:
	decString pName;
	int pWidth;
	int pHeight;
	bool pDoubleSided;
	bool pDecal;
	int pDecalOffset;
	
	
	
public:
	/** \name Constructors and Destructors */
	/*@{*/
	/** \brief Create model texture. */
	deModelTexture( const char *name, int width, int height );
	
	/** \brief Clean up model texture. */
	~deModelTexture();
	/*@}*/
	
	
	
	/** \name Management */
	/*@{*/
	/** \brief Name. */
	inline const decString &GetName() const{ return pName; }
	
	/** \brief Width. */
	inline int GetWidth() const{ return pWidth; }
	
	/** \brief Height. */
	inline int GetHeight() const{ return pHeight; }
	
	/** \brief Faces of this texture are double sided. */
	inline bool GetDoubleSided() const{ return pDoubleSided; }
	
	/** \brief Set if faces of this texture are double sided. */
	void SetDoubleSided( bool doubleSided );
	
	/** \brief Faces of this texture are rendered as decals. */
	inline bool GetDecal() const{ return pDecal; }
	
	/** \brief Set if faces of this texture are rendered as decals. */
	void SetDecal( bool decal );
	
	/** \brief Decal offset. */
	inline int GetDecalOffset() const{ return pDecalOffset; }
	
	/** \brief Set decal offset. */
	void SetDecalOffset( int offset );
	/*@}*/
};

#endif
