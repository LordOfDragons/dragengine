from SConsCommon import *

import zipfile
import os

Import( 'parent_env parent_targets parent_report' )

envAddon = parent_env.Clone()

pathShare = envAddon.subst(envAddon['path_igde_share'])

files = []
globFiles(envAddon, 'dragengine-import-export', '*.py', files)

archiveFiles = {f:envAddon.File(f) for f in files}
def archiveZip(env, target, source):
	with zipfile.ZipFile(target[0].abspath, 'w', zipfile.ZIP_DEFLATED) as arcfile:
		for path, node in archiveFiles.items():
			arcfile.write(node.srcnode().abspath, path)

versionString = '1.10'
if envAddon['force_version']:
        versionString = envAddon['force_version']

filename = '{}-{}.zip'.format(envAddon['addon_name_blender'], versionString)

targetBuild = envAddon.Command(filename, files, envAddon.Action(archiveZip, 'Archiving $TARGET'))

install = envAddon.Install(os.path.join(pathShare, 'tools'), targetBuild)
targetInstall = envAddon.Alias('blender-addon', install)

filename = os.path.join(pathShare, 'tools', filename)

archiveDevelop = {}
archiveDevelop[os.path.join(pathShare, 'tools', filename)] = targetBuild[0]

parent_targets['blender-addon'] = {
	'name' : 'Drag[en]gine Blender AddOn',
	'build' : targetBuild,
	'install' : targetInstall,
	'install-igde-runtime' : targetInstall,
	'archive-igde' : archiveDevelop}
