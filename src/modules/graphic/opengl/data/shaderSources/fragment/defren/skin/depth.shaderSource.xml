<?xml version='1.0' encoding='ISO-8859-1'?>
<shaderSource>
	<name>F DefRen Skin Depth</name>
	<stage>fragment</stage>
	<source>depth.frag.glsl</source>
	
	<output set='1' name='outConstant' location='0'/>
	
	<output set='2' name='outColor' location='0'/>
	<output set='2' name='outDepth' location='1'/>
	
	<define>CLIP_PLANE</define>
	<define>DEPTH_DISTANCE</define>
	<define>DEPTH_OFFSET</define>
	<define>DEPTH_ORTHOGONAL</define>
	<define>DEPTH_TEST_LARGER</define>
	<define>DEPTH_TEST</define>
	<define>ENCODE_OUT_DEPTH</define>
	<define>FADEOUT_RANGE</define>
	<define>HAS_TESSELLATION_SHADER</define>
	<define>INVERSE_DEPTH</define>
	<define>MASKED_SOLIDITY</define>
	<define>OUTPUT_COLOR</define>
	<define>OUTPUT_CONSTANT</define>
	<define>SKIN_CLIP_PLANE</define>
	<define>TP_NORMAL_STRENGTH</define>
	<define>WITH_OUTLINE</define>
	<define>WITH_VARIATIONS</define>
	
	<define>TEXTURE_EMISSIVITY</define>
	<define>TEXTURE_ENVROOM_EMISSIVITY</define>
	<define>TEXTURE_ENVROOM</define>
	<define>TEXTURE_NORMAL</define>
	<define>TEXTURE_RIM_EMISSIVITY</define>
	<define>TEXTURE_SOLIDITY</define>
	
	<define>SHARED_SPB</define>
	
	<!-- shared/defren/ubo_render_parameters.glsl -->
	<uniformBlock name='RenderParameters' binding='0'/>
	
	<!-- shared/defren/skin/macros_geometry.glsl -->
	<define>DECAL</define>
	<define>DEPTH_TEST</define>
	<define>OUTPUT_COLOR</define>
	<define>SKIN_CLIP_PLANE</define>
	<define>TEXTURE_EMISSIVITY</define>
	<define>TEXTURE_ENVMAP</define>
	<define>TEXTURE_ENVROOM_EMISSIVITY</define>
	<define>TEXTURE_ENVROOM</define>
	<define>TEXTURE_HEIGHT</define>
	<define>TEXTURE_NORMAL</define>
	<define>TEXTURE_REFLECTIVITY</define>
	<define>TEXTURE_RENDERCOLOR</define>
	<define>TEXTURE_RIM_EMISSIVITY</define>
	<define>TEXTURE_ROUGHNESS</define>
	<define>TEXTURE_SOLIDITY</define>
	<define>WITH_OUTLINE</define>
	<define>WITH_REFLECTION</define>
	
	<!-- shared/defren/skin/ubo_dynamic_parameters.glsl -->
	<define>DYNAMIC_AO_SOLIDITY_MULTIPLIER</define>
	<define>DYNAMIC_COLOR_GAMMA</define>
	<define>DYNAMIC_COLOR_SOLIDITY_MULTIPLIER</define>
	<define>DYNAMIC_COLOR_TINT</define>
	<define>DYNAMIC_EMISSIVITY_INTENSITY</define>
	<define>DYNAMIC_ENVROOM_EMISSIVITY_INTENSITY</define>
	<define>DYNAMIC_ENVROOM_OFFSET</define>
	<define>DYNAMIC_ENVROOM_SIZE</define>
	<define>DYNAMIC_ENVROOM_TINT</define>
	<define>DYNAMIC_HEIGHT_REMAP</define>
	<define>DYNAMIC_NORMAL_SOLIDITY_MULTIPLIER</define>
	<define>DYNAMIC_NORMAL_STRENGTH</define>
	<define>DYNAMIC_OUTLINE_COLOR_TINT</define>
	<define>DYNAMIC_OUTLINE_COLOR</define>
	<define>DYNAMIC_OUTLINE_EMISSIVITY_TINT</define>
	<define>DYNAMIC_OUTLINE_EMISSIVITY</define>
	<define>DYNAMIC_OUTLINE_SOLIDITY</define>
	<define>DYNAMIC_OUTLINE_THICKNESS</define>
	<define>DYNAMIC_REFLECTIVITY_MULTIPLIER</define>
	<define>DYNAMIC_REFLECTIVITY_SOLIDITY_MULTIPLIER</define>
	<define>DYNAMIC_REFRACTION_DISTORT_STRENGTH</define>
	<define>DYNAMIC_RIM_ANGLE</define>
	<define>DYNAMIC_RIM_EMISSIVITY_INTENSITY</define>
	<define>DYNAMIC_RIM_EXPONENT</define>
	<define>DYNAMIC_ROUGHNESS_GAMMA</define>
	<define>DYNAMIC_ROUGHNESS_REMAP</define>
	<define>DYNAMIC_ROUGHNESS_SOLIDITY_MULTIPLIER</define>
	<define>DYNAMIC_SKIN_CLIP_PLANE_BORDER</define>
	<define>DYNAMIC_SKIN_CLIP_PLANE</define>
	<define>DYNAMIC_SOLIDITY_MULTIPLIER</define>
	<define>DYNAMIC_TRANSPARENCY_MULTIPLIER</define>
	<define>DYNAMIC_VARIATION</define>
	
	<!-- shared/defren/skin/ubo_instance_parameters.glsl -->
	<shaderStorageBlock name='InstanceParametersSSBO' binding='0'/>
	<uniformBlock name='InstanceParameters' binding='2'/>
	
	<define>SHARED_SPB</define>
	
	<!-- shared/defren/skin/ubo_texture_parameters.glsl -->
	<shaderStorageBlock name='TextureParametersSSBO' binding='2'/>
	<uniformBlock name='TextureParameters' binding='1'/>
	
	<define>SHARED_SPB</define>
	
	<!-- shared/defren/skin/relief_mapping.glsl -->
	<define>TEXTURE_HEIGHT</define>
	<define>TEXTURE_NORMAL</define>
	<define>TEXTURE_ENVMAP</define>
	
	<!-- shared/defren/skin/depth_offset.glsl -->
	<define>DEPTH_DISTANCE</define>
	<define>DEPTH_ORTHOGONAL</define>
	
	<!-- system only
	<define>SHARED_SPB_TEXTURE_ARRAY_SIZE</define>
	<define>SHARED_SPB_TEXTURE_PADDING</define>
	<define>SHARED_SPB_USE_SSBO</define>
	-->
</shaderSource>
