//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
//                 This is a native class documentation                         //
//                                                                              //
//                  This file is used only for DoxyGen                          //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

/**
 * \brief Math support.
 * 
 * Use \code{.ds} requires Math \endcode in your script files to load the introspection package.
 * 
 * This is a native class. This class is for static use only and can not instanciated but subclassed.
 * \author Roland Pl√ºss
 * \version 1.0
 * \date 2015
 */
class Math
	/** \brief e. */
	public fixed var float M_E = 2.718282
	
	/** \brief log_2 e. */
	public fixed var float M_LOG2E = 1.442695
	
	/** \brief log_10 e. */
	public fixed var float M_LOG10E = 0.434294
	
	/** \brief log_e 2. */
	public fixed var float M_LN2 = 0.693147
	
	/** \brief log_e 10. */
	public fixed var float M_LN10 = 2.302585
	
	/** \brief pi. */
	public fixed var float M_PI = 3.141593
	
	/** \brief pi / 2. */
	public fixed var float M_PI_2 = 1.570796
	
	/** \brief pi / 4. */
	public fixed var float M_PI_4 = 0.785398
	
	/** \brief 1 / pi. */
	public fixed var float M_1_PI = 0.318310
	
	/** \brief 2 / pi. */
	public fixed var float M_2_PI = 0.636620
	
	/** \brief 2 / sqrt( pi ). */
	public fixed var float M_2_SQRTPI = 1.128379
	
	/** \brief sqrt( 2 ). */
	public fixed var float M_SQRT2 = 1.414214
	
	/** \brief 1 / sqrt( 2 ). */
	public fixed var float M_SQRT1_2 = 0.707107
	
	
	
	/** \name Management */
	/*@{*/
	/** \brief Absolute value of n. */
	public static func int abs( int n )
		return 0
	end
	
	/** \brief Arc cosine of n. */
	public static func float acos( float n )
		return 0.0
	end
	
	/** \brief Arc sine of n. */
	public static func float asin( float n )
		return 0.0
	end
	
	/** \brief Arc tangense of n. */
	public static func float atan( float n )
		return 0.0
	end
	
	/** \brief Tangense of y/x. */
	public static func float atan2( float y, float x )
		return 0.0
	end
	
	/** \brief Smallest integer that is greater or equal to x. */
	public static func float ceil( float x )
		return 0.0
	end
	
	/** \brief Cosine of value x. */
	public static func float cos( float x )
		return 0.0
	end
	
	/** \brief Hyperbolic cosine of value x. */
	public static func float cosh( float x )
		return 0.0
	end
	
	/** \brief Exponential. */
	public static func float exp( float x )
		return 0.0
	end
	
	/** \brief Absolute value of floating point value. */
	public static func float fabs( float x )
		return 0.0
	end
	
	/** \brief Round down value. */
	public static func float floor( float x )
		return 0.0
	end
	
	/** \brief Reminder of x/y. */
	public static func float fmod( float x, float y )
		return 0.0
	end
	
	/** \brief Natural logarithme. */
	public static func float log( float x )
		return 0.0
	end
	
	/** \brief Logarithme base 10. */
	public static func float log10( float x )
		return 0.0
	end
	
	/** \brief X raised to the power of y. */
	public static func float pow( float x, float y )
		return 0.0
	end
	
	/** \brief Sinus. */
	public static func float sin( float x )
		return 0.0
	end
	
	/** \brief Hyperbolic sinus. */
	public static func float sinh( float x )
		return 0.0
	end
	
	/** \brief Square root. */
	public static func float sqrt( float x )
		return 0.0
	end
	
	/** \brief Tangense. */
	public static func float tan( float x )
		return 0.0
	end
	
	/** \brief Hhyperbolic tangense. */
	public static func float tanh( float x )
		return 0.0
	end
	
	/** \brief Smaller of two numbers. */
	public static func int min( int a, int b )
		return 0
	end
	
	/** \brief Smaller of two numbers. */
	public static func float min( float a, float b )
		return 0.0
	end
	
	/** \brief Larger of two numbers. */
	public static func int max( int a, int b )
		return 0
	end
	
	/** \brief Larger of two numbers. */
	public static func float max( float a, float b )
		return 0.0
	end
	
	/** \brief Clamp value to a value range. If upper is less than lower lower is returned. */
	public static func int clamp( int value, int lower, int upper )
		return 0
	end
	
	/** \brief Clamp value to a value range. If upper is less than lower lower is returned. */
	public static func float clamp( float value, float lower, float upper )
		return 0.0
	end
	/*@}*/
end
