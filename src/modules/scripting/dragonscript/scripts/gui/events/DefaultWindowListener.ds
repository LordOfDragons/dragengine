/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui.Events


/**
 * \brief Default implementation of WindowListener.
 */
class DefaultWindowListener implements WindowListener
	/** \brief Create default window listener. */
	public func new()
	end
	
	/** \brief Window has been activated. */
	public func void onWindowActivated( WindowEvent event )
	end
	
	/** \brief Window has been deactivated. */
	public func void onWindowDeactivated( WindowEvent event )
	end
	
	/** \brief Window is closing. */
	public func void onWindowClosing( WindowEvent event )
	end
	
	/** \brief Window state switch to normal. */
	public func void onWindowRestored( WindowEvent event )
	end
	
	/** \brief Window state switch to minimized. */
	public func void onWindowMinimized( WindowEvent event )
	end
	
	/** \brief Window state switch to maximized. */
	public func void onWindowMaximized( WindowEvent event )
	end
end
