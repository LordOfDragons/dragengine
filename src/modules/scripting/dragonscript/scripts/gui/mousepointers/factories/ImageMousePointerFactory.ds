/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Gui.MousePointers.Factories

pin Dragengine.Gui.CanvasCreators
pin Dragengine.Scenery


/**
 * \brief Mouse pointer factory using image.
 */
public class ImageMousePointerFactory extends DefaultMousePointerFactory
	var Image pImage
	var ColorMatrix pColorMatrix
	
	
	
	/** \brief Create mouse pointer factory. */
	func new()
	end
	
	/** \brief Create copy of mouse pointer factory. */
	func new(ImageMousePointerFactory factory) super(factory)
		pImage = factory.pImage
		pColorMatrix = factory.pColorMatrix
	end
	
	
	
	/** \brief Image or \em null if not set. */
	func Image getImage()
		return pImage
	end
	
	/** \brief Set image or \em null if not set. */
	func void setImage(Image image)
		pImage = image
	end
	
	/** \brief Color matrix to use. */
	func ColorMatrix getColorMatrix()
		return pColorMatrix
	end
	
	/** \brief Set color matrix to use. */
	func void setColorMatrix(ColorMatrix colorMatrix)
		pColorMatrix = colorMatrix
	end
	
	
	
	/**
	 * \brief Set parameter.
	 * 
	 * | Name | Type | Method |
	 * | size | Point | setSize |
	 * | offset | Point | setOffset |
	 * | image | Image | setImage |
	 * | colorMatrix | ColorMatrix | setColorMatrix |
	 */
	func void setParameter(String name, Object value)
		if name.equals("image")
			setImage(value cast Image)
			
		elif name.equals("colorMatrix")
			setColorMatrix(value cast ColorMatrix)
			
		else
			super.setParameter(name, value)
		end
	end
	
	
	
	/** \brief Create copy of mouse pointer factory. */
	func MousePointerFactory copyFactory()
		return ImageMousePointerFactory.new(this)
	end
	
	/** \brief Create mouse pointer. */
	func MousePointer createMousePointer()
		var ImageMousePointer mousePointer = ImageMousePointer.new()
		initImageMousePointer(mousePointer)
		return mousePointer
	end
	
	/** \brief Initialize canvas creator part of mouse pointer. */
	protected func void initImageMousePointer(ImageMousePointer mousePointer)
		initDefaultMousePointer(mousePointer)
		mousePointer.setImage(pImage)
		
		if pColorMatrix != null
			mousePointer.getCanvas().setColorTransform(pColorMatrix)
		end
	end
end
