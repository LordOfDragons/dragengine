/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
 
namespace Dragengine.Gui.MousePointers.Factories


/**
 * \brief Default mouse pointer factory.
 */
public class DefaultMousePointerFactory implements MousePointerFactory
	var Point pSize
	var Point pOffset
	
	
	
	/** \brief Create mosue pointer factory. */
	func new()
		pSize = Point.new()
		pOffset = Point.new()
	end
	
	/** \brief Create copy of mouse pointer factory. */
	func new(DefaultMousePointerFactory factory)
		pSize = factory.pSize
		pOffset = factory.pOffset
	end
	
	
	
	/** \brief Mouse pointer size. */
	func Point getSize()
		return pSize
	end
	
	/** \brief Set mouse pointer size. */
	func void setSize(Point size)
		if size == null
			throw EInvalidParam.new()
		end
		pSize = size
	end
	
	/** \brief Canvas offset relative to mouse position. */
	func Point getOffset()
		return pOffset
	end
	
	/** \brief Set canvas offset relative to mouse position. */
	func void setOffset(Point offset)
		if offset == null
			throw EInvalidParam.new()
		end
		pOffset = offset
	end
	
	
	
	/**
	 * \brief Set parameter.
	 * 
	 * | Name | Type | Method |
	 * | size | Point | setSize |
	 * | offset | Point | setOffset |
	 */
	func void setParameter(String name, Object value)
		if name.equals("size")
			setSize(value cast Point)
			
		elif name.equals("offset")
			setOffset(value cast Point)
			
		else
			throw EInvalidParam.new()
		end
	end
	
	/** \brief Create copy of factory. */
	func MousePointerFactory copyFactory()
		return DefaultMousePointerFactory.new(this)
	end
	
	/** \brief Create mouse pointer. */
	func MousePointer createMousePointer()
		var DefaultMousePointer mousePointer = DefaultMousePointer.new()
		initDefaultMousePointer(mousePointer)
		return mousePointer
	end
	
	/** \brief Initialize default part of mouse pointer. */
	protected func void initDefaultMousePointer(DefaultMousePointer mousePointer)
		mousePointer.setSize(pSize)
		mousePointer.setOffset(pOffset)
	end
end
