/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui.MousePointers.Factories

pin Dragengine.Scenery


/**
 * \brief List of mouse pointer factories for use with automatic gui theme creation.
 *
 * The factories in this list server as blue prints for factories to be used by automatic
 * gui themes and must not be changed. For this reason call MousePointerFactory.copyFactory()
 * on received factories to create a new factory of the matching type and with appropriate
 * configuration for modifying and using.
 */
class MousePointerFactories
	/** \brief Mouse pointer factories. */
	private var Dictionary pFactories
	
	
	
	/** \brief Create mouse pointer factories. */
	public func new()
		this.pFactories = Dictionary.new()
	end
	
	
	
	/** \brief Add factory. */
	public func void add( String name, MousePointerFactory factory )
		this.pFactories.setAt( name, factory )
	end
	
	/** \brief Named factory or \em null if not found. */
	public func MousePointerFactory getNamed( String name )
		return this.pFactories.getAt( name, null ) cast MousePointerFactory
	end
	
	/** \brief Remove factory if present. */
	public func void remove( String name )
		this.pFactories.removeIfExisting( name )
	end
	
	/** \brief Remove all factories. */
	public func void removeAll()
		this.pFactories.removeAll()
	end
	
	
	
	/** \brief Add default factories. */
	public func void addDefaultFactories()
		this.add( "Default", DefaultMousePointerFactory.new() )
		this.add( "Image", ImageMousePointerFactory.new() )
		this.add( "Video", VideoMousePointerFactory.new() )
		this.add( "CanvasCreator", CanvasCreatorMousePointerFactory.new() )
	end
end
