/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui.MousePointers

pin Dragengine.Gui.CanvasCreators
pin Dragengine.Scenery


/**
 * \brief Mouse pointer using image.
 */
class ImageMousePointer extends DefaultMousePointer
	var Image pImage
	
	
	
	/** \brief Create mouse pointer. */
	func new()
	end
	
	
	
	/** \brief Image or \em null if not set. */
	func Image getImage()
		return pImage
	end
	
	/** \brief Set image. */
	func void setImage(Image image)
		if image == pImage
			return
		end
		
		pImage = image
		
		if image != null
			setSize(image.getSize())
			
		else
			setSize(Point.new())
		end
		
		updateCanvas()
	end
	
	
	
	/** \brief Update canvas. */
	func void updateCanvas()
		var CanvasView canvasView = getCanvasView()
		
		canvasView.removeAllCanvas()
		
		if pImage == null
			return
		end
		
		var CanvasImage canvasImage = CanvasImage.new()
		canvasImage.setImage(pImage)
		canvasImage.setSize(pImage.getSize())
		canvasView.addCanvas(canvasImage)
	end
end
