/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui

pin Dragengine.Gui.Events
pin Dragengine.Utils


/**
 * \brief Display FPS rate as reported by the game engine updated in regular intervals.
 */
class DisplayFPSRate extends Label
	/** \brief Update timer. */
	public class UpdateTimer extends Timer
		/** \brief Text model. */
		private var TextModel pModel
		
		/** \brief Create timer. */
		public func new( TextModel model ) super( 0.5, true )
			this.pModel = model
		end
		
		/** \brief Timer elapsed. */
		public func void fire()
			this.pModel.setText( "FPS: " + Engine.getFPSRate() )
		end
	end
	
	
	
	/** \brief Update timer. */
	private var UpdateTimer pTimer
	
	
	
	/** \brief Create fps rate display. */
	public func new() super( "FPS: 0" )
		this.setTransparency( 1.0 )
		this.setMinimumSize( Point.new( 70, 14 ) )
		
		this.pTimer = UpdateTimer.new( this.getModel() )
	end
	
	/** Dispose. */
	public func void dispose()
		if this.pTimer != null
			this.pTimer.giveUp()
			this.pTimer = null
		end
		
		super.dispose()
	end
end
