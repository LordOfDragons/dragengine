/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
 
namespace Dragengine.Gui.Decorations

pin Dragengine.Scenery


/**
 * \brief Window decoration interface.
 * 
 * Renders a custom border around a Window supporting testing for hit window border areas.
 */
interface Decoration
	/** \brief Area. */
	enum Area
		/** \brief No valid area. */
		nothing
		
		/** \brief Close button area. */
		close
		
		/** \brief Maximize button area. */
		maximize
		
		/** \brief Minimize button area. */
		minimize
		
		/** \brief Window menu button area. */
		menu
		
		/** \brief Title area. */
		title
		
		/** \brief Resize left. */
		resizeLeft
		
		/** \brief Resize top. */
		resizeTop
		
		/** \brief Resize right. */
		resizeRight
		
		/** \brief Resize bottom. */
		resizeBottom
		
		/** \brief Resize left-top. */
		resizeTopLeft
		
		/** \brief Resize left-bottom. */
		resizeBottomLeft
		
		/** \brief Resize right-top. */
		resizeTopRight
		
		/** \brief Resize right-bottom. */
		resizeBottomRight
	end
	
	/** \brief Button. */
	enum Button
		/** \brief Close window button. */
		close
		
		/** \brief Maximize window button. */
		maximize
		
		/** \brief Minimize window button. */
		minimize
	end
	
	
	
	/** \brief Window the decoration is assigned to or null if there is none. */
	func Window getWindow()
	
	/** \brief Set window the decoration is assigned to or null if there is none. */
	func void setWindow( Window window )
	
	/** \brief Border size. */
	func BorderSize getBorderSize()
	
	/** \brief Test which part of the decoration is hit if any. */
	func Area areaHitBy( Point position )
	
	/** \brief Canvas to render this border. */
	func Canvas getCanvas()
	
	/** \brief Resize canvas to fit window if window is set. */
	func void resizeCanvas()
	
	/** \brief Window parameters changed that potentially affect the decoration. */
	func void onWindowParametersChanged()
	
	/**
	 * \brief Set button state.
	 * \param button One from BUTTON_*
	 * \param hover Mouse hovers over button.
	 * \param pressed Button is pressed down.
	 */
	func void setButtonState( Button button, bool hover, bool pressed )
end
