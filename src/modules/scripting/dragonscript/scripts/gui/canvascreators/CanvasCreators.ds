/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui.CanvasCreators

pin Dragengine.Scenery


/**
 * \brief List of canvas creators for use with automatic gui theme creation.
 *
 * The creators in this list server as blue prints for creators to be used by
 * automatic gui themes and must not be changed. For this reason call
 * CanvasCreator.copyCanvasCreator() on received creators to create a new creator
 * of the matching type and with appropriate configuration for modifying and using.
 */
class CanvasCreators
	/** \brief Canvas creators. */
	private var Dictionary pCreators
	
	
	
	/** \brief Create canvas creators. */
	public func new()
		pCreators = Dictionary.new()
	end
	
	
	
	/** \brief Add creator. */
	public func void add(String name, CanvasCreator creator)
		pCreators.setAt(name, creator)
	end
	
	/** \brief Named creator or \em null if not found. */
	public func CanvasCreator getNamed(String name)
		return pCreators.getAt(name, null) cast CanvasCreator
	end
	
	/** \brief Remove creator if present. */
	public func void remove(String name)
		pCreators.removeIfExisting(name)
	end
	
	/** \brief Remove all factories. */
	public func void removeAll()
		pCreators.removeAll()
	end
	
	
	
	/** \brief Add default canvas creators. */
	public func void addDefaultCreators()
		add("Default", DefaultCanvasCreator.new())
		add("Rectangle", RectangleCanvasCreator.new())
		add("Bevel", BevelCanvasCreator.new())
		add("Image", ImageCanvasCreator.new())
		add("ImageBorder", ImageBorderCanvasCreator.new())
		add("Combined", CombinedCanvasCreator.new())
	end
end
