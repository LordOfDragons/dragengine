/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
 
namespace Dragengine.Gui.Borders

pin Dragengine.Gui
pin Dragengine.Scenery


/**
 * \brief Renders a single transparent image as border.
 * 
 * The image is stretched to cover the entire widget. 
 */
class ImageBorder extends DefaultBorder
	/** \brief Border image. */
	private var Image pImage
	
	/** \brief Border size. */
	private var BorderSize pBorderSize
	
	
	
	/** \brief Create border. */
	public func new() this( null )
	end
	
	/** \brief Create border. */
	public func new( Image image ) this( image, BorderSize.new() )
	end
	
	/** \brief Create border. */
	public func new( Image image, BorderSize borderSize )
		if image == null or borderSize == null
			throw EInvalidParam.new()
		end
		
		this.pBorderSize = borderSize
		this.pImage = image
		this.updateCanvas()
	end
	
	
	
	/** \brief Border image. */
	public func Image getImage()
		return this.pImage
	end
	
	/** \brief Set image border. */
	public func void setImage( Image image )
		if image == null
			throw EInvalidParam.new()
		end
		
		if image == this.pImage
			return
		end
		
		this.pImage = image
		this.updateCanvas()
	end
	
	/** \brief Border size. */
	public func BorderSize getBorderSize()
		return this.pBorderSize
	end
	
	/** \brief Set border size. */
	public func void setBorderSize( BorderSize borderSize )
		if borderSize.equals( this.pBorderSize )
			return
		end
		
		this.pBorderSize = borderSize
		this.layoutContainer()
		this.updateCanvas()
	end
	
	
	
	/** Update canvas. */
	public func void updateCanvas()
		var CanvasView borderCanvas = this.getCanvasView()
		borderCanvas.removeAllCanvas()
		
		var CanvasImage canvasImage = CanvasImage.new()
		canvasImage.setImage( this.pImage )
		canvasImage.setSize( borderCanvas.getSize() )
		borderCanvas.addCanvas( canvasImage )
	end
end
