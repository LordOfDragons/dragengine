/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
 
namespace Dragengine.Gui.Borders.Factories


/**
 * \brief Factory for TitledTwoColorBorder.
 */
public class TitledTwoColorBorderFactory extends TwoColorBorderFactory
	var String pText
	var Font pFont
	var Color pTextColor
	
	
	
	/** \brief Create titled two color border factory. */
	func new()
	end
	
	func new(String text)
		setText(text)
	end
	
	/** \brief Create copy of border factory. */
	func new(TitledTwoColorBorderFactory factory) super(factory)
		pText = factory.pText
		pFont = factory.pFont
		pTextColor = factory.pTextColor
	end
	
	
	
	/** \brief Text or null to use widget title. */
	func String getText()
		return pText
	end
	
	/** \brief Set text or null to use widget title. */
	func void setText(String text)
		pText = text
	end
	
	/** \brief Font or null to use widget font. */
	func Font getFont()
		return pFont
	end
	
	/** \brief Set font or null to use widget font. */
	func void setFont(Font font)
		pFont = font
	end
	
	/** \brief Text color or null to use widget text color. */
	func Color getTextColor()
		return pTextColor
	end
	
	/** \brief Set text color or null to use widget text color. */
	func void setTextColor(Color color)
		pTextColor = color
	end
	
	
	
	/** \brief Create border. */
	func Border createBorder()
		var TitledTwoColorBorder border = TitledTwoColorBorder.new()
		
		border.setRaised(getRaised())
		border.setColorHighlight(getColorHighlight())
		border.setColorShadow(getColorShadow())
		border.setText(pText)
		border.setFont(pFont)
		border.setTextColor(pTextColor)
		
		return border
	end
	
	/** \brief Create factory copy. */
	func BorderFactory copyFactory()
		return TitledTwoColorBorderFactory.new(this)
	end
	
	/** \brief Set parameter. */
	func void setParameter(String name, Object value)
		if name.equals("text")
			setText(value cast String)
			
		elif name.equals("font")
			setFont(value cast Font)
			
		elif name.equals("textColor")
			setTextColor(value cast Color)
			
		else
			super.setParameter(name, value)
		end
	end
end
