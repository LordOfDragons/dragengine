/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
 
namespace Dragengine.Gui.Borders.Factories


/**
 * \brief Factory for TitledTwoColorBorder.
 */
public class TitledTwoColorBorderFactory extends TwoColorBorderFactory
	private var String pText
	private var Font pFont
	private var Color pTextColor
	
	
	
	/** \brief Create titled two color border factory. */
	public func new()
	end
	
	public func new(String text)
		setText(text)
	end
	
	/** \brief Create copy of border factory. */
	public func new(TitledTwoColorBorderFactory factory) super(factory)
		pText = factory.pText
		pFont = factory.pFont
		pTextColor = factory.pTextColor
	end
	
	
	
	/** \brief Text or null to use widget title. */
	public func String getText()
		return pText
	end
	
	/** \brief Set text or null to use widget title. */
	public func void setText(String text)
		pText = text
	end
	
	/** \brief Font or null to use widget font. */
	public func Font getFont()
		return pFont
	end
	
	/** \brief Set font or null to use widget font. */
	public func void setFont(Font font)
		pFont = font
	end
	
	/** \brief Text color or null to use widget text color. */
	public func Color getTextColor()
		return pTextColor
	end
	
	/** \brief Set text color or null to use widget text color. */
	public func void setTextColor(Color color)
		pTextColor = color
	end
	
	
	
	/** \brief Create border. */
	public func Border createBorder()
		var TitledTwoColorBorder border = TitledTwoColorBorder.new()
		
		border.setRaised(getRaised())
		border.setColorHighlight(getColorHighlight())
		border.setColorShadow(getColorShadow())
		border.setText(pText)
		border.setFont(pFont)
		border.setTextColor(pTextColor)
		
		return border
	end
	
	/** \brief Create factory copy. */
	public func BorderFactory copyFactory()
		return TitledTwoColorBorderFactory.new(this)
	end
	
	/** \brief Set parameter. */
	public func void setParameter(String name, Object value)
		if name.equals("text")
			setText(value cast String)
			
		elif name.equals("font")
			setFont(value cast Font)
			
		elif name.equals("textColor")
			setTextColor(value cast Color)
			
		else
			super.setParameter(name, value)
		end
	end
end
