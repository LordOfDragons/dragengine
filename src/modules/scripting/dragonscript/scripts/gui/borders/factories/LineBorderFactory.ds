/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
 
namespace Dragengine.Gui.Borders.Factories


/**
 * Factory for LineBorder.
 */
public class LineBorderFactory implements BorderFactory
	/** Color of the line. */
	private var Color pColor
	/** Thickness in pixels. */
	private var int pThickness
	
	
	
	/** Creates a new raised etched border factory. */
	public func new()
		this.pColor = Color.black
		this.pThickness = 1
	end
	
	/** \brief Create copy of border factory. */
	public func new( LineBorderFactory factory )
		this.pColor = factory.pColor
		this.pThickness = factory.pThickness
	end
	
	
	
	/** Retrieves the line color. */
	public func Color getColor()
		return this.pColor
	end
	
	/** Sets the line color. */
	public func void setColor( Color color )
		if color == null
			throw EInvalidParam.new()
		end
		
		this.pColor = color
	end
	
	/** Retrieves the thickness. */
	public func int getThickness()
		return this.pThickness
	end
	
	/** Sets the thickness. */
	public func void setThickness( int thickness )
		if thickness < 1
			throw EInvalidParam.new()
		end
		
		this.pThickness = thickness
	end
	
	
	
	/** Create border. */
	public func Border createBorder()
		return LineBorder.new( this.pColor, this.pThickness )
	end
	
	/** \brief Create factory copy. */
	public func BorderFactory copyFactory()
		return LineBorderFactory.new( this )
	end
	
	/** \brief Set parameter. */
	public func void setParameter( String name, Object value )
		if name.equals( "color" )
			this.setColor( value cast Color )
			
		elif name.equals( "thickness" )
			this.setThickness( value cast int )
			
		else
			throw EInvalidParam.new()
		end
	end
end
