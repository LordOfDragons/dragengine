/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
 
namespace Dragengine.Gui.Borders


/**
 * \brief Base class for titled borders.
 * 
 * Drawn using a highlight and a shadow color which can be raised or lowered.
 */
class TitledTwoColorBorder extends TwoColorBorder
	private var String pText
	private var Font pFont
	private var Color pTextColor
	
	
	
	/** \brief Create titled two color border. */
	public func new()
		pText = ""
	end
	
	public func new(String text)
		pText = text
	end
	
	
	
	/** \brief Text or widget title if not set. */
	public func String getText()
		if pText != null
			return pText
		end
		
		var Widget widget = getWidget()
		
		if widget != null
			return widget.getTitle()
			
		else
			return ""
		end
	end
	
	/** \brief Set text. */
	public func void setText(String text)
		pText = text
		
		layoutContainer()
		updateCanvas()
	end
	
	/** \brief Font or widget font if not set. */
	public func Font getFont()
		if pFont != null
			return pFont
		end
		
		var Widget widget = getWidget()
		
		if widget != null
			return widget.getFont()
			
		else
			return null
		end
	end
	
	/**
	 * \brief Set font or null to use widget font.
	 * \version 1.13
	 */
	public func void setFont(Font font)
		pFont = font
		
		layoutContainer()
		updateCanvas()
	end
	
	/**
	 * \brief Text color or widget text color if not set.
	 * \version 1.13
	 */
	public func Color getTextColor()
		if pTextColor != null
			return pTextColor
		end
		
		var Widget widget = getWidget()
		
		if widget != null
			return widget.getTextColor()
			
		else
			return null
		end
	end
	
	/**
	 * \brief Set text color or null to use widget text color.
	 * \version 1.13
	 */
	public func void setTextColor(Color color)
		pTextColor = color
		
		layoutContainer()
		updateCanvas()
	end
	
	/** \brief Text size. */
	public func Point getTextSize()
		var Font font = getFont()
		
		if font != null
			return font.getTextSize(getText())
			
		else
			return Point.new()
		end
	end
	
	
	
	/** \deprecated Use getTextColor(). */
	public func Color getFontColor()
		return getTextColor()
	end
end
