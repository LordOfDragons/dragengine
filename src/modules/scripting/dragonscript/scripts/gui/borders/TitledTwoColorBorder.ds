/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
 
namespace Dragengine.Gui.Borders


/**
 * \brief Base class for titled borders.
 * 
 * Drawn using a highlight and a shadow color which can be raised or lowered.
 */
class TitledTwoColorBorder extends TwoColorBorder
	var String pText
	var Font pFont
	var Color pTextColor
	
	
	
	/** \brief Create titled two color border. */
	func new()
		pText = ""
	end
	
	func new(String text)
		pText = text
	end
	
	
	
	/** \brief Text or widget title if not set. */
	func String getText()
		if pText != null
			return pText
		end
		
		var Widget widget = getWidget()
		return widget != null if widget.getTitle() else ""
	end
	
	/** \brief Set text. */
	func void setText(String text)
		pText = text
		
		layoutContainer()
		updateCanvas()
	end
	
	/** \brief Font or widget font if not set. */
	func Font getFont()
		if pFont != null
			return pFont
		end
		
		var Widget widget = getWidget()
		
		if widget != null
			return widget.getFont()
			
		else
			return null
		end
	end
	
	/**
	 * \brief Set font or null to use widget font.
	 * \version 1.13
	 */
	func void setFont(Font font)
		pFont = font
		
		layoutContainer()
		updateCanvas()
	end
	
	/**
	 * \brief Text color or widget text color if not set.
	 * \version 1.13
	 */
	func Color getTextColor()
		if pTextColor != null
			return pTextColor
		end
		
		var Widget widget = getWidget()
		
		if widget != null
			return widget.getTextColor()
			
		else
			return null
		end
	end
	
	/**
	 * \brief Set text color or null to use widget text color.
	 * \version 1.13
	 */
	func void setTextColor(Color color)
		pTextColor = color
		
		layoutContainer()
		updateCanvas()
	end
	
	/** \brief Text size. */
	func Point getTextSize()
		var Font font = getFont()
		
		if font == null
			return Point.new()
		end
		
		var String text = getText()
		
		var Widget widget = getWidget()
		if widget != null
			text = widget.translate(text)
		end
		
		return font.getTextSize(text)
	end
	
	
	
	/** \deprecated Use getTextColor(). */
	func Color getFontColor()
		return getTextColor()
	end
end
