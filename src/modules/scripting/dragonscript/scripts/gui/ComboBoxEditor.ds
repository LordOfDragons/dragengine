/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui

pin Dragengine.Gui.Events


/**
 * \brief Editor for a combo box.
 */
interface ComboBoxEditor
	/** \brief Get widget to use for editing. */
	func Widget getWidget()
	
	/**
	 * \brief Get editor value.
	 * \details The returned object can be the one previously set by
	 *          setEditorValue() if unchanged or a new object if changed.
	 */
	func Object getEditorValue()
	
	/**
	 * \brief Set editor value to object or \em null to clear.
	 * \details \em object is garanteed to not be modified by the editor.
	 */
	func void setEditorValue( Object object )
	
	/**
	 * \brief Add action listener.
	 * \details Action listener is called whenever the edited object changes.
	 */
	func void addActionListener( ActionListener listener )
	
	/** \brief Remove action listener. */
	func void removeActionListener( ActionListener listener )
	
	/**
	 * \brief Start editing.
	 * \details Typically this selects the entire text or otherwise prepare
	 *          editor for directly manipulating the set value. There is no
	 *          stop editing call since the widget is hidden in this case.
	 */
	func void startEditing()
end
