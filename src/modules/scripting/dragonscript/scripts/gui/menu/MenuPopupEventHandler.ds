/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2022, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Gui

pin Dragengine.Gui.Events


/**
 * \brief Event handlers for popup menus.
 * \version 1.11
 */
class MenuPopupEventHandler
	/** \brief Create menu popup handler. */
	public func new()
	end
	
	
	
	/**
	 * \brief Handle event.
	 * \returns true if caller has to consume event.
	 */
	public func bool handleEvent(Event event, MenuPopup topLevelMenu, Widget owner)
		var Desktop desktop = owner.getDesktop()
		if desktop == null
			return true
		end
		
		if MouseEvent.isMouseEvent(event.getIdentifier())
			return handleEvent(desktop, event cast MouseEvent, topLevelMenu, owner)
		end
		
		return true
	end
	
	/**
	 * \brief Handle mouse event.
	 * \returns true if caller has to consume event.
	 */
	protected func bool handleEvent(Desktop desktop, MouseEvent event, MenuPopup topLevelMenu, Widget owner)
		var Point mouseLocation = desktop.getMouseLocation()
		var int i, count = desktop.getWidgetCount()
		var Point localPosition
		var Window window
		var Widget widget
		
		for i = count - 1 downto 0
			window = desktop.getWidget(i) cast Window
			if not window.getVisible() or not window castable MenuPopup
				continue
			end
			
			localPosition = mouseLocation - window.getPosition()
			if not window.isPointInside(localPosition)
				continue
			end
			
			if not window.getEnabled()
				return true
			end
			
			if owner == window
				return true
			end
			
			window.sendEvent(MouseEvent.new(window, event.getIdentifier(), \
				event.getButton(), event.getModifiers(), \
				localPosition, event.getSystem(), event.getDevice()))
			return false
		end
		
		topLevelMenu.openSubMenusClearHover()
		
		return true
	end
end
