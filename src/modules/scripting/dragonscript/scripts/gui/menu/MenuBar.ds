/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2022, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Gui

pin Dragengine.Gui.Events
pin Dragengine.Gui.Layouts
pin Dragengine.Utils


/**
 * \brief Menu bar with MenuBarItem instances.
 * \version 1.11
 */
class MenuBar extends Panel
	private var MenuBarItem pOpenSubMenu
	
	
	
	/** \brief Create menu bar. */
	public func new()
		setLayout(FlowLayout.new(LayoutAxis.x))
		setDesignerSelector("MenuBar")
	end
	
	/**
	 * \brief Create menu bar calling block to add content.
	 * 
	 * Block receives MenuPopup as argument. Block call is wrapped inside runWhileBlockingLayout()
	 * for efficiency. doLayout() will be called after leaving the block.
	 */
	public func new(Block blockAddContent) this()
		blockAddContent.run(this)
	end
	
	/** \brief Dispose of widget. */
	public func void dispose()
		setOpenSubMenu(null)
		super.dispose()
	end
	
	
	
	/** \brief Start using menu bar. */
	public func void startUse()
		captureMouse()
	end
	
	/** \brief Stop using menu bar. */
	public func void stopUse()
		setOpenSubMenu(null)
		releaseMouse()
	end
	
	
	
	/** \brief Open sub menu item or null. */
	public func MenuBarItem getOpenSubMenu()
		return pOpenSubMenu
	end
	
	/**
	 * \brief Set open sub menu or null.
	 * 
	 * If null hides sub menu. If not null shows submenu.
	 */
	public func void setOpenSubMenu(MenuBarItem subMenu)
		if subMenu == pOpenSubMenu
			return
		end
		
		if pOpenSubMenu != null
			pOpenSubMenu.hideSubMenu()
		end
		
		pOpenSubMenu = subMenu
		
		if subMenu != null
			subMenu.showSubMenu()
		end
	end
end
