/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui

pin Dragengine.Commands
pin Dragengine.Gui.Events
pin Dragengine.Scenery


/**
 * \brief Show command description if selected.
 * \version 1.16
 */
class EditBindingShowDescriptionListener extends DefaultListModelListener
	var EditBindingsListBox pListBox
	var TextModel pModelInfo
	
	
	
	/** \brief Create listener. */
	func new(EditBindingsListBox listBox, TextModel modelInfo)
		if listBox == null
			throw ENullPointer.new("listBox")
		end
		if modelInfo == null
			throw ENullPointer.new("modelInfo")
		end
		
		pListBox = listBox
		pModelInfo = modelInfo
	end
	
	
	
	/** \brief Selection changed. */
	func void selectionChanged(ListModel listModel)
		updateModelInfo()
	end
	
	/** \brief Content changed. */
	func void contentChanged(ListModel listModel, int fromIndex, int toIndex)
		updateModelInfo()
	end
	
	
	
	/** \brief Update info model. */
	func void updateModelInfo()
		if pListBox.getModel().getSelected() != -1
			var EditBindingsListModelEntry selected = pListBox.getModel().getAt(\
				pListBox.getModel().getSelected()) cast EditBindingsListModelEntry
			pModelInfo.setText(selected.getCommand().translateDescription(pListBox.getTranslationManager()))
			
		else
			pModelInfo.setText("")
		end
	end
end
