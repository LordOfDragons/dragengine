/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui

pin Dragengine.ConversationSystem
pin Dragengine.Gui.Borders
pin Dragengine.Gui.Events
pin Dragengine.Gui.Layouts
pin Dragengine.Utils


/**
 * \brief Display sub titles using a SubTitleBox.
 * 
 * Implements ConversationPlaybackSubTitle so the window can be directly used as sub title
 * interface by a conversation playback if required. The sub title box is set to remove all
 * texts before adding a new one. If you like to use keep previous texts visible until they
 * time out call \code{.ds} getSubTitleBox().setRemoveAllBeforeAdd(false) \endcode .
 */
class WindowSubTitle extends Window implements ConversationPlaybackSubTitle
	private var SubTitleBox pSubTitleBox
	
	
	
	/**
	 * \brief Create sub title window.
	 * 
	 * Sets the window width to be a bit less than the screen width. Upon changin size the
	 * window is moved to be located at a given distance from the bottom.
	 */
	public func new() super(0, 0, GraphicSystem.getWindowWidth() - 100, 10)
		runWhileBlockingLayout(block
			setTitle("")
			setCanMove(false)
			setCanResize(false)
			setCanActivate(false)
			setCanClose(false)
			setCanMaximize(false)
			setCanMinimize(false)
			setDesignerSelector("WindowSubTitle")
			
			pSubTitleBox = createSubTitleBox()
			pSubTitleBox.setRemoveAllBeforeAdd(true)
			addWidget(pSubTitleBox)
		end)
	end
	
	/** \brief Dispose of window. */
	public func void dispose()
		pSubTitleBox = null
		super.dispose()
	end
	
	
	
	/** \brief Sub title box. */
	public func SubTitleBox getSubTitleBox()
		return pSubTitleBox
	end
	
	
	
	/** \brief Add sub title text widget. */
	public func void addSubTitleText(Widget text)
		pSubTitleBox.addSubTitleText(text)
		moveToTop()
	end
	
	/** \brief Remove all texts. */
	public func void removeAllSubTitleText()
		pSubTitleBox.removeAllSubTitleText()
	end
	
	
	
	/**
	 * \brief Size changed.
	 * 
	 * Adjusts window position.
	 */
	public func void onResize(WidgetEvent event)
		super.onResize(event)
		adjustWindowGeometry()
	end
	
	/** \brief Desktop size changed. */
	public func void onDesktopResized()
		adjustWindowGeometry()
	end
	
	/**
	 * \brief Lay out widgets using the set layout.
	 * 
	 * Extends the super class behavior to call adjustWindowGeometry() after super call.
	 */
	public func void doLayout()
		if getBlockLayout()
			return
		end
		
		super.doLayout()
		adjustWindowGeometry()
	end
	
	/**
	 * \brief Adjust window position and height.
	 * 
	 * Default implementation moves window to be center bottom and sets height to content.
	 */
	protected func void adjustWindowGeometry()
		var int contentHeight = getLayout().getMinimumSize(this).getY()
		var Point desktopSize = getParent().getSize()
		var int windowWidth = getWidth()
		
		setHeight(contentHeight)
		setPosition(Point.new((desktopSize.getX() - windowWidth) / 2, desktopSize.getY() - contentHeight - 50))
	end
	
	/** \brief Create sub title box. */
	public func SubTitleBox createSubTitleBox()
		return SubTitleBox.new()
	end
end
