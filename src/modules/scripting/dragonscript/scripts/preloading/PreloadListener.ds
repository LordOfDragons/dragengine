/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Preloading


/**
 * \brief Listener interface for objects supporting preloading.
 * 
 * Used by objects preloading more than one resource. Sends notification
 * each time the state of preloading changes. This includes resources
 * having finished preloading and preloading of the entire object having
 * finished either successfully or failed.
 * 
 */
interface PreloadListener
	/**
	 * \brief One or more resources finished preloading but.
	 * \param preloader Preloader sending event.
	 */
	func void resourcesFinished( Preloader preloader )
	
	/**
	 * \brief Preloading of all resources finished.
	 * \param preloader Preloader sending event.
	 * \param success If \em true all resources preloaded successfully
	 *                and the object is ready to use. If \em false one
	 *                or more resources failed to preload and the object
	 *                is potentially invalid to use safely.
	 */
	func void preloadingFinished( Preloader preloader, bool success )
end
