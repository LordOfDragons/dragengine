/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Services.Mods


/**
 * \brief Default implementation of ServiceModsListener.
 * \version 1.23
 */
class DefaultServiceModsListener implements ServiceModsListener
	/**
	 * \brief Create new instance of DefaultServiceModsListener.
	 */
	func new()
	end
	
	
	
	/**
	 * \brief List of modification information received in response to a service request.
	 * \param service Service sending the event.
	 * \param requestId Identifier of request this response belongs to.
	 * \param mods Array containing ServiceModInfo.
	 */
	func void listModsFinished(ServiceMods service, UniqueID requestId, Array mods)
	end
	
	/**
	 * \brief Listing modifications failed.
	 * \param service Service sending the event.
	 * \param requestId Identifier of failed request.
	 * \param exceptionn Exception.
	 */
	func void listModsFailed(ServiceMods service, UniqueID requestId, Exception exception)
	end
	
	/**
	 * \brief Loaded resource received in response to a service request.
	 * \param service Service sending the event.
	 * \param url URL of resource to load.
	 * \param resource Loaded resource.
	 */
	func void loadResourceFinished(ServiceMods service, String url, Object resource)
	end
	
	/**
	 * \brief Loading resource failed.
	 * \param service Service sending the event.
	 * \param url URL of resource to load.
	 * \param exception Exception.
	 */
	func void loadResourceFailed(ServiceMods service, String url, Exception exception)
	end
	
	/**
	 * \brief Mod mamagement event.
	 * \param service Service sending the event.
	 * \param event Management event.
	 * \param modId Identifier of modification affected by the event.
	 * \param progress Progress information or null.
	 * \param exception Exception or null if sueeded.
	 */
	func void managementEvent(ServiceMods service, ServiceMods.ManagementEvent event,\
	String modId, ServiceModProgress progress, Exception exception)
	end
	
	/**
	 * \brief User has been authenticated.
	 * \param service Service sending the event.
	 */
	func void authenticateFinished(ServiceMods service)
	end
	
	/**
	 * \brief User authentication failed.
	 * \param service Service sending the event.
	 * \param exception Exception or null if sueeded.
	 */
	func void authenticateFailed(ServiceMods service, Exception exception)
	end
	
	/**
	 * \brief User has been deauthenticated.
	 * \param service Service sending the event.
	 */
	func void deauthenticateFinished(ServiceMods service)
	end
	
	/**
	 * \brief User deauthentication failed.
	 * \param service Service sending the event.
	 * \param exception Exception or null if sueeded.
	 */
	func void deauthenticateFailed(ServiceMods service, Exception exception)
	end
end
