/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Services.User

/**
 * \brief User credentials.
 * \version 1.23
 * 
 * Credentials for logging in user. Required for situations where the user has to
 * or wants to use manual logging in in contrary to automatic logging in.
 */
class ServiceUserCredentials
	/**
	 * \brief User identifier.
	 * 
	 * Depending on the service this can be a user name, user identifier or an
	 * email address. Used only if login using a user/password system is used.
	 */
	public var String id
	
	/**
	 * \brief User password.
	 * 
	 * Depending on the service this can be a password or pass phrase.
	 * Used only if login using a user/password system is used.
	 */
	public var String password
	
	/**
	 * \brief Exchange token.
	 * 
	 * Used only if a login using an authentication transfer mechanism is used.
	 * An example for this is Epic Game Launcher logging in the user then passing
	 * an exchange token to the game to re-login.
	 */
	public var String exchangeCode
	
	/**
	 * \brief User authentification token.
	 * 
	 * Used for cross-platform authentication. Often called linking accounts.
	 * Usually logging in using service native methods provides more functionality
	 * than linking to an account of another service.
	 */
	public var ServiceUserAuthToken authToken
	
	
	
	/**
	 * \brief Create new instance of class ServiceUserCredentials.
	 */
	func new()
	end
end
