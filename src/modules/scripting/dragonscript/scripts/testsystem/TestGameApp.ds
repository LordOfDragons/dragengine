/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.TestSystem

pin Dragengine.Gui


/**
 * \brief BaseGameApp for use by tests.
 * \version 1.5
 * 
 * This class has to nullify all side effects of using BaseGameApp which interferes with
 * the regular application handling. This is a bit complicated but ensures tests can run
 * against an as-vanilla-as-possibe BaseGameApp without breaking the test application.
 */
class TestGameApp extends BaseGameApp
	/**
	 * \brief Create test game application.
	 */
	public func new()
	end
	
	
	
	/**
	 * Overrides BaseGameApp.initGame()
	 */
	public func void initGame()
		super.initGame()
		InputSystem.setCaptureInputDevices(false)
		getDesktop().setVisible(false)
	end
	
	/**
	 * Overrides BaseGameApp.onFrameUpdate()
	 */
	public func void onFrameUpdate()
		// default timer and frame updater are called by DETestingApp.
		// doing it here too would cause troubles
	end
end
