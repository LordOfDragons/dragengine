/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.ConversationSystem

pin Dragengine.Gui
pin Dragengine.LoadSave
pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * \brief Conversation action adding a coordinate system to the conversation if not there yet.
 */
class CActionCoordSystemAdd extends ConversationAction
	/** \brief Factory for loading actor actions. */
	class Factory implements PersistencyFactory
		public static fixed var String NAME = "CActionCoordSystemAdd"
		
		func new()
		end
		
		func Persistable readObjectFromFile(PersistencyEnvironment env, FileReader reader)
			return CActionCoordSystemAdd.new(env, reader)
		end
		
		static func void registerFactory(Persistency persistency)
			persistency.addFactory(NAME, Factory.new())
		end
	end
	
	
	
	var StringID pCoordSystemID
	var StringID pAliasID
	
	
	
	/** \brief Create conversation action. */
	func new()
	end
	
	/** \brief Read from file. */
	func new(PersistencyEnvironment env, FileReader reader) super(env, reader)
		select reader.readByte() // version
		case 0
			pCoordSystemID = env.readStringIDOrNullIfEmpty(reader)
			pAliasID = env.readStringIDOrNullIfEmpty(reader)
			
		else
			throw EInvalidParam.new("unsupported version")
		end
	end
	
	
	
	/** \brief Coordinate system ID or null if not set. */
	func StringID getCoordSystemID()
		return pCoordSystemID
	end
	
	/** \brief Set coordinate system ID or null if not set. */
	func void setCoordSystemID(StringID id)
		pCoordSystemID = id
	end
	
	/** \brief Optional alias ID to set for the actor or null if not set. */
	func StringID getAliasID()
		return pAliasID
	end
	
	/** \brief Set optional alias ID to set for the actor or null if not set. */
	func void setAliasID(StringID id)
		pAliasID = id
	end
	
	
	
	/** \brief Execute action. */
	func void execute(ConversationPlayback playback)
		var ConversationCoordSystem coordSystem = playback.getCoordSystemByID(pCoordSystemID)
		
		if coordSystem == null
			coordSystem = playback.createConversationCoordSystem(pCoordSystemID)
			playback.addCoordSystem(coordSystem, pAliasID)
		end
		
		playback.advanceToNextAction()
	end
	
	
	
	/**
	 * \brief Name of PersistencyFactory required to load object from file.
	 * 
	 * Name of PersistencyFactory is first written to the file as string with
	 * 8-bit length. Then writeToFile() is called to write the object itself.
	 * Empty name is not allowed as is names longer than 255 characters.
	 * Name has to match a PersistencyFactory present in the Persistency
	 * instance used for loading objects. Object is read using
	 * PersistencyFactory.readObjectFromFile() of the matching PersistencyFactory.
	 */
	func String persistencyFactoryName()
		return Factory.NAME
	end
	
	/** \brief Write object to file writer. */
	func void writeObjectToFile(PersistencyEnvironment env, FileWriter writer)
		super.writeObjectToFile(env, writer)
		
		writer.writeByte(0) // version
		
		env.writeStringIDOrEmptyIfNull(writer, pCoordSystemID)
		env.writeStringIDOrEmptyIfNull(writer, pAliasID)
	end
end
