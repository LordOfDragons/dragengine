/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.ConversationSystem


/**
 * \brief Simple conversation game or actor command definition.
 * \version 1.25
 * 
 * Defines the command to run. If actor identifier is set runs the command as actor command
 * instead of game command.
 */
class SimpleConversationCommand
	var StringID pId
	var StringID pActorId
	var String pCommand
	
	
	/** \brief Create simple conversation command definition. */
	func new(StringID id)
		if id == null
			throw ENullPointer.new("id")
		end
		pId = id
	end
	
	/** \brief Create copy of simple conversation command definition. */
	func new(SimpleConversationCommand command)
		pId = command.pId
		pActorId = command.pActorId
		pCommand = command.pCommand
	end
	
	
	/** \brief Identifier. */
	func StringID getId()
		return pId
	end
	
	/** \brief Conversation actor identifier or alias or null. */
	func StringID getActorId()
		return pActorId
	end
	
	/** \brief Set conversation actor identifier or alias or null. */
	func void setActorId(StringID identifier)
		pActorId = identifier
	end
	
	/** \brief Command. */
	func String getCommand()
		return pCommand
	end
	
	/** \brief Set command. */
	func void setCommand(String command)
		if command == null
			throw ENullPointer.new("command")
		end
		pCommand = command
	end
end
