/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.SpeechAnimations

pin Dragengine.Gui
pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * Speech animation Phoneme.
 */
class SpeechAnimationPhoneme
	private var int pIPA
	private var float pLength
	private var String pMoveName
	private var String pVertexPositionSet
	private var int pController
	
	
	
	/** \brief Create speech animation phoneme. */
	public func new(int ipa, float length, String moveName) this(ipa, length, moveName, "")
	end
	
	/**
	 * \brief Create speech animation phoneme.
	 * \version 1.17
	 */
	public func new(int ipa, float length, String moveName, String vertexPositionSet)
		if moveName == null
			throw ENullPointer.new("moveName")
		end
		if vertexPositionSet == null
			throw ENullPointer.new("vertexPositionSet")
		end
		
		pIPA = ipa
		pLength = length
		pMoveName = moveName
		pVertexPositionSet = vertexPositionSet
		pController = -1
	end
	
	
	
	/** \brief IPA symbol. */
	public func int getIPA()
		return pIPA
	end
	
	/** \brief Length. */
	public func float getLength()
		return pLength
	end
	
	/** \brief Move name. */
	public func String getMoveName()
		return pMoveName
	end
	
	/**
	 * \brief Vertex position set.
	 * \version 1.17
	 */
	public func String getVertexPositionSet()
		return pVertexPositionSet
	end
	
	/** \brief Animator controller index or -1 if not assigned. */
	public func int getController()
		return pController
	end
	
	/** \brief Set animator controller index or -1 if not assigned. */
	public func void setController(int controller)
		pController = controller
	end
end
