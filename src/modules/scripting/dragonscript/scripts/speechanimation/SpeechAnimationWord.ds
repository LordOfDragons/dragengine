/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.SpeechAnimations

pin Dragengine.Gui
pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * Speech animation Word.
 */
class SpeechAnimationWord
	/** Unique namel. */
	private var StringID pName
	/** Phoneme of the word. */
	private var UnicodeString pPhonetics
	
	
	
	/** Creates a new speech animation phoneme. */
	public func new( StringID name, UnicodeString phonetics )
		if name == null or phonetics == null
			throw EInvalidParam.new()
		end
		
		this.pName = name
		this.pPhonetics = phonetics
	end
	
	
	
	/** Retrieves the unique name. */
	public func StringID getName()
		return this.pName
	end
	
	/** Retrieves the phonetics. */
	public func UnicodeString getPhonetics()
		return this.pPhonetics
	end
end
