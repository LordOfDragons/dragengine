/*
 * MIT License
 *
 * Copyright (C) 2025, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.BehaviorTreeSystem

pin Dragengine.Scenery
pin Dragengine.Utils


/**
 * \brief Behavior tree rule stop processing behavior tree for one update cycle.
 * \version 1.27
 * 
 * Returns \ref BTResult#running if \ref BTContext#getActionFirstRun() returns true
 * otherwise returns \ref BTResult#success.
 */
class BTRuleYield extends BTRule
	/** \brief Create behavior tree rule. */
	func new(String id) super(id)
	end
	
	
	/** \brief Run action. */
	func BTResult run(BTContext context)
		if evaluateConditions(context)
			return context.getActionFirstRun() if BTResult.running else BTResult.success
			
		else
			return BTResult.failure
		end
	end
	
	
	
	/** String representation of object. */
	func String toString()
		return "BTRuleYield(id='{}')".format(Array.newWith(getID()))
	end
end
