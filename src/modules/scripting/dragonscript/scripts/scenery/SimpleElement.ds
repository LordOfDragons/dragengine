/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery


/**
 * \brief Simple element.
 * 
 * Simple behavior element composing of these behaviors:
 * - ECBehaviorComponent
 * - ECBehaviorCollider
 * - ECBehaviorNavigationSpace
 * - ECBehaviorAttachToParent
 * 
 * This class is a quick way to add basic elements to a game world. You can create new
 * element classes by subclassing and adding additional behaviors. It is usually though
 * better to create a new BehaviorElementClass subclass instead adding the desired
 * behaviors. This also allows to use subclassed behaviors for specific needs.
 */
class SimpleElement extends BehaviorElement
	private var ECBehaviorComponent.Instance pComponent
	private var ECBehaviorCollider.Instance pCollider
	private var ECBehaviorNavigationSpace.Instance pNavigationSpace
	private var ECBehaviorAttachToParent.Instance pAttachToParent
	
	
	
	/** \brief Create element. */
	public func new( SimpleElementClass eclass ) super( eclass )
		this.pComponent = eclass.getComponent().instance( this )
		this.pCollider = eclass.getCollider().instance( this )
		this.pNavigationSpace = eclass.getNavigationSpace().instance( this )
		this.pAttachToParent = eclass.getAttachToParent().instance( this )
	end
	
	
	/** \brief Component behavio instance. */
	public func ECBehaviorComponent.Instance getComponent()
		return this.pComponent
	end
	
	/** \brief Collider behavior instance. */
	public func ECBehaviorCollider.Instance getCollider()
		return this.pCollider
	end
	
	/** \brief Navigation space behavior instance. */
	public func ECBehaviorNavigationSpace.Instance getNavigationSpace()
		return this.pNavigationSpace
	end
	
	/** \brief Attach to parent behavior instance. */
	public func ECBehaviorAttachToParent.Instance getAttachToParent()
		return this.pAttachToParent
	end
	
	
	
	/** \brief Visit element. */
	public func void visit( ElementVisitor visitor )
		visitor.visitSimpleElement( this )
	end
end
