/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.ConversationSystem



/**
 * \brief Coordinate system for use in conversation relative to an element.
 * 
 * Returns a coordinate system matrix for conversation targets. In contrary to conversation
 * actors coordinate system objects can be added to multiple conversation playback objects
 * at the same time. Conversation coordinate systems can be static or dynamic. This class
 * places the coordinate system relative to the coordinate system of an element.
 * 
 * \note The element is not persisted since it is set only during construction time.
 */
class ElementConvoCoordSystem extends ConversationCoordSystem
	private var Element pElement
	
	
	
	/** \brief Create conversation coordinate system. */
	public func new( StringID id, Element element ) super( id )
		if element == null
			throw EInvalidParam.new()
		end
		this.pElement = element
	end
	
	/** \brief Create conversation coordinate system. */
	public func new( StringID id, DMatrix localMatrix, Element element ) super( id, localMatrix )
		if element == null
			throw EInvalidParam.new()
		end
		this.pElement = element
	end
	
	/** \brief Create copy of conversation coordinate system. */
	public func new( ElementConvoCoordSystem coordSystem ) super( coordSystem )
		this.pElement = coordSystem.pElement
	end
	
	/** \brief Dispose of the coordinate system breaking cyclic references. */
	public func void dispose()
		super.dispose()
		this.pElement = null
	end
	
	
	
	/** \brief Element to use. */
	public func Element getElement()
		return this.pElement
	end
	
	
	
	/** \brief Coordinate system matrix. */
	public func DMatrix getMatrix()
		return super.getMatrix() * this.pElement.getElementMatrix()
	end
end
