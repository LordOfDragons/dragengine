/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.TriggerSystem


/**
 * \brief Element providing a single ECBehaviorAttachSlot.
 * 
 * Can be used to provide arbitrary attach slots in a game world not connected to a behavior
 * element. Typical use for this element is to provide another element to the player he can
 * retrieve during the game. Usually this element is placed in the game world in the appropriate
 * place and is static in nature. This element supports though also ECBehaviorAttachToParent
 * allowing it to be attached to other elements. This allows arbitrary elements to be equipped
 * with attachment slots moving along.
 */
class AttachSlotClass extends BehaviorElementClass
	private var ECBehaviorCollider pCollider
	private var ECBehaviorAttachSlot pAttachSlot
	private var ECBehaviorAttachToParent pAttachToParent
	
	
	
	/** \brief Create element class. */
	public func new() this( "AttachSlot" )
	end
	
	/** \brief Create element class using loaders from BaseGameApp. */
	public func new( String className ) super( className )
		this.pCollider = ECBehaviorCollider.new( this, null )
		this.pCollider.setGhost()
		this.pAttachSlot = ECBehaviorAttachSlot.new( this, this.pCollider )
		this.pAttachToParent = ECBehaviorAttachToParent.new( this, this.pCollider, null )
	end
	
	
	
	/** \brief Collider behavior. */
	public func ECBehaviorCollider getCollider()
		return this.pCollider
	end
	
	/** \brief Attach slot behavior. */
	public func ECBehaviorAttachSlot getAttachSlot()
		return this.pAttachSlot
	end
	
	/** \brief Attach to parent behavior. */
	public func ECBehaviorAttachToParent getAttachToParent()
		return this.pAttachToParent
	end
	
	
	
	/** \brief Create copy of element class. */
	public func ElementClass duplicateNamed( String classname )
		return AttachSlotClass.new( classname )
	end
	
	
	
	/** \brief Create element instance. */
	protected func Element createElement()
		return AttachSlot.new( this )
	end
end
