/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.LoadSave
pin Dragengine.TriggerSystem


/**
 * \brief Basic speaker class using speaker behavior.
 */
class BaseSpeakerClass extends BehaviorElementClass
	private var ECBehaviorSpeaker pSpeaker
	
	
	
	/** \brief Create element class. */
	public func new() this( "BaseSpeaker" )
	end
	
	/** \brief Create element class. */
	public func new( Loaders loaders, TSTriggerTable triggerTable ) \
	this( "BaseSpeaker", loaders, triggerTable )
	end
	
	/** \brief Create element class using loaders from BaseGameApp. */
	public func new( String className ) this( className, \
	sharedFactoryHelper.defaultLoaders(), sharedFactoryHelper.defaultTriggerTable())
	end
	
	/** \brief Create element class. */
	public func new( String className, Loaders loaders, TSTriggerTable triggerTable ) super( className )
		this.pSpeaker = ECBehaviorSpeaker.new( this, null, loaders, triggerTable )
	end
	
	
	
	/** \brief Speaker behavior. */
	public func ECBehaviorSpeaker getSpeaker()
		return this.pSpeaker
	end
	
	
	
	/** \brief Create copy of element class. */
	public func ElementClass duplicateNamed( String classname )
		return BaseSpeakerClass.new( classname )
	end
	
	
	
	/** \brief Create element instance. */
	protected func Element createElement()
		return BaseSpeaker.new( this )
	end
end
