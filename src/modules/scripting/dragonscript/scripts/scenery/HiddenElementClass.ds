/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2023, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.TriggerSystem
pin Dragengine.Utils


/**
 * \brief Hidden element class.
 * 
 * Simple element supporting to be shown/hidden using a trigger expression.
 */
class HiddenElementClass extends SimpleElementClass
	var ECBehaviorShowElement pShowElement
	
	
	
	/** \brief Create element class using loaders from BaseGameApp. */
	func new() this("HiddenElement")
	end
	
	/** \brief Create element class. */
	func new(Loaders loaders, TSTriggerTable triggerTable)\
	this("HiddenElement", loaders, triggerTable)
	end
	
	/** \brief Create element class using loaders from BaseGameApp. */
	func new(String className)\
	this(className, BaseGameApp.getApp().getLoaders(), BaseGameApp.getApp().getTriggerTable())
	end
	
	/** \brief Create element class. */
	func new(String className, Loaders loaders, TSTriggerTable triggerTable) super(className, loaders)
		pShowElement = ECBehaviorShowElement.new(this, triggerTable)
	end
	
	
	
	/** \brief Show element behavior. */
	func ECBehaviorShowElement getShowElement()
		return pShowElement
	end
	
	
	
	/** \brief Create copy of element class. */
	func ElementClass duplicateNamed(String classname)
		return HiddenElementClass.new(classname)
	end
	
	
	
	/**
	 * \brief Create element instance.
	 * 
	 * If this element class does not support creating elements, for example because
	 * the result is not an element, \em null has to be returned. The default
	 * implementation returns \em null. Subclasses not intending to create elements
	 * or requiring special creation handling should subclass createAndAddElement()
	 * and loadAndAddElement() bypassing this method.
	 */
	protected func Element createElement()
		return HiddenElement.new(this)
	end
end
