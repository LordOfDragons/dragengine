/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.Preloading
pin Dragengine.Utils



/**
 * \brief Element class property for use with XML loading.
 * 
 * Element class properties reduce the coding effort required to provide typical
 * element class data. Furthermore they can be used for XML subclassing without
 * extra code.
 */
abstract class ElementClassProperty
	private var String pName
	
	
	
	/** \brief Create property. */
	public func new(String name)
		if name == null
			throw ENullPointer.new("name")
		end
		
		pName = name
	end
	
	/** \brief Dispose of element class property to break reference loops. */
	public func void dispose()
	end
	
	
	
	/** \brief Name. */
	public func String getName()
		return pName
	end
	
	
	
	/** \brief Set value of property from XML decoded value. */
	abstract public func void setValue(Object value)
	
	/**
	 * \brief Copy value from another element class property of the same type.
	 * \version 1.17
	 * 
	 * Used for loading XML element classes depending on other XML element classes. This
	 * requires copying settings from the base XML element class to the derived XML element
	 * class. Otherwise the base XML element class changes are lost.
	 * 
	 * Element class properties are required to support copying settings from the same element
	 * class property type. Support to copy settings from other element class property types
	 * is optional and can be useful for special use cases. Such element class properties
	 * are typically custom written for an individual application.
	 * 
	 * The default implementation is empty.
	 */
	public func void copyValue(ElementClass elementClass, ElementClassProperty property)
	end
	
	/** \brief Preload resources if supported. */
	public func void preloadResources(ElementClass elementClass, PreloadCounter counter)
	end
	
	/**
	 * \brief Log preloading problems.
	 * \returns True if problems are present.
	 */
	public func bool logPreloadProblems(ElementClass elementClass, Console console)
		return false
	end
end
