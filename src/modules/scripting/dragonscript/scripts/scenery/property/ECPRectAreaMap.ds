/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.Utils



/**
 * \brief Map of rect area values class property for use with XML loading.
 * 
 * Similar to ECPRectAreaList but uses a Dictionary mapping RectArea to String.
 */
class ECPRectAreaMap extends ElementClassProperty
	private var Dictionary pMap
	
	
	
	/** \brief Create property. */
	public func new(String name) super(name)
		pMap = Dictionary.new()
	end
	
	
	
	/** \brief Number of rect areas. */
	public func int getCount()
		return pMap.getCount()
	end
	
	/** \brief RectArea with String or \em null if not found. */
	public func RectArea getAt(String name)
		return pMap.getAt(name) cast RectArea
	end
	
	/** \brief Array of String names. */
	public func Array getNames()
		return pMap.getKeys()
	end
	
	/**
	 * \brief Visit rect areas using block.
	 * 
	 * Block receives parameters String name and RectArea area.
	 */
	public func void forEach(Block ablock)
		pMap.forEach(ablock)
	end
	
	/** \brief Remove all react areas. */
	public func void removeAll()
		pMap.removeAll()
	end
	
	/** \brief Add or replace react area with name. */
	public func void setAt(String name, RectArea area)
		pMap.setAt(name, area)
	end
	
	
	
	/** \brief Set value of property from XML decoded value. */
	public func void setValue(Object value)
		pMap.removeAll()
		(value cast Dictionary).forEach(block String key, RectArea value
			pMap.setAt(key, value)
		end)
	end
	
	/**
	 * \brief Copy value from another element class property of the same type.
	 * \version 1.17
	 */
	public func void copyValue(ElementClass elementClass, ElementClassProperty property)
		pMap = (property cast ECPRectAreaMap).pMap.map(block String key, RectArea value
			return RectArea.new(value)
		end)
	end
end
