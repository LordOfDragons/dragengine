/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.Utils
pin Dragengine.Preloading



/**
 * \brief Border size value element class property for use with XML loading.
 */
class ECPBorderSize extends ElementClassProperty
	/** \brief Value. */
	private var BorderSize pValue
	
	
	
	/** \brief Create property. */
	public func new(String name, BorderSize value) super(name)
		pValue = value
	end
	
	
	
	/** \brief Value. */
	public func BorderSize getBorderSize()
		return pValue
	end
	
	/** \brief Set value. */
	public func void setBorderSize(BorderSize area)
		pValue = area
	end
	
	
	
	/** \brief Set value of property from XML decoded value. */
	public func void setValue(Object value)
		pValue = value cast BorderSize
	end
	
	/**
	 * \brief Copy value from another element class property of the same type.
	 * \version 1.17
	 */
	public func void copyValue(ElementClass elementClass, ElementClassProperty property)
		pValue = (property cast ECPBorderSize).pValue
	end
	
	
	
	/**
	 * \brief Border size modified by stub property if present.
	 * 
	 * If named stub property is not present or empty string the stored border size is returned.
	 * If the named stub property is present it is decoded using codec.
	 * 
	 * The following property value formats are understood where "size", "left", "top", "right"
	 * and "bottom" are positive integer values including 0:
	 * - "size": BorderSize.new(size)
	 * - "left top right bottom": BorderSize.new(left, top, right, bottom)
	 */
	public func BorderSize getBorderSize(StubWithProperties stub, CodecPropertyString codec)
		var String value = stub.getPropertyValueFor(getName(), "")
		if value.empty()
			return pValue
		end
		
		var Array list = codec.decodeFixedIntList(value, 4)
		
		if list.getCount() == 1
			// size
			return BorderSize.new((list.getAt(0) cast String).toInt())
			
		else
			// left top right bottom
			return BorderSize.new(\
				(list.getAt(0) cast String).toInt(), \
				(list.getAt(1) cast String).toInt(), \
				(list.getAt(2) cast String).toInt(), \
				(list.getAt(3) cast String).toInt())
		end
	end
end
