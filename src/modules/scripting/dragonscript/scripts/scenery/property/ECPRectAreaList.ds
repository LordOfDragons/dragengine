/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.Utils



/**
 * \brief List of rect area values class property for use with XML loading.
 */
class ECPRectAreaList extends ElementClassProperty
	private var Array pRectAreas
	
	
	
	/** \brief Create property. */
	public func new(String name) super(name)
		pRectAreas = Array.new()
	end
	
	
	
	/** \brief Number of rect areas. */
	public func int getCount()
		return pRectAreas.getCount()
	end
	
	/** \brief RectArea at index. */
	public func RectArea getAt(int index)
		return pRectAreas.getAt(index) cast RectArea
	end
	
	/** \brief Get random react area or \em null if no react areas are present. */
	public func RectArea getRandom()
		if pRectAreas.getCount() == 0
			return null
			
		else
			return pRectAreas.random() cast RectArea
		end
	end
	
	/** \brief For each react area with block with RectArea as parameter. */
	public func void forEach(Block ablock)
		pRectAreas.forEach(ablock)
	end
	
	/** \brief Remove all react areas. */
	public func void removeAll()
		pRectAreas.removeAll()
	end
	
	/** \brief Add react area. */
	public func void add(RectArea area)
		pRectAreas.add(area)
	end
	
	
	
	/** \brief Set value of property from XML decoded value. */
	public func void setValue(Object value)
		pRectAreas.removeAll()
		(value cast Array).forEach(block RectArea each
			pRectAreas.add(each)
		end)
	end
	
	/**
	 * \brief Copy value from another element class property of the same type.
	 * \version 1.17
	 */
	public func void copyValue(ElementClassProperty property)
		pRectAreas = (property cast ECPRectAreaList).pRectAreas.map(block RectArea each
			return RectArea.new(each)
		end)
	end
end
