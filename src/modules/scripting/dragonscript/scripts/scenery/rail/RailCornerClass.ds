/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.Scenery
pin Dragengine.Gui
pin Dragengine.Preloading


/**
 * \brief Corner in a Rail element class.
 */
class RailCornerClass extends ElementClass
	private var ECPStringID pRailID
	private var ECPInteger pOrder
	
	
	
	/** \brief Create element class. */
	public func new() super( "RailCorner" )
		this.setPersistable( false )
		
		this.pRailID = ECPStringID.new( "id" )
		this.addProperty( this.pRailID )
		
		this.pOrder = ECPInteger.new( "order", 0 )
		this.addProperty( this.pOrder )
	end
	
	
	
	/**
	 * \brief Create rail corner adding it to game world.
	 */
	public func void createAndAddElement( StubElement stub, GameWorld gameWorld )
		var RailCorner corner = this.createRailCorner( this.pOrder.getValue( stub ) )
		corner.setPosition( stub.getPosition() )
		corner.setOrientation( Quaternion.newFromEuler( stub.getRotation() ) )
		gameWorld.getRailList().getOrAddWithID( this.pRailID.getValue( stub ) ).addCorner( corner )
	end
	
	/**
	 * \brief Create rail corner.
	 * 
	 * Default implementation creates instance of RailCorner. Overwrite in subclass to
	 * create rail corner of different subclass.
	 */
	protected func RailCorner createRailCorner( int order )
		return RailCorner.new( order )
	end
end

