/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Scenery

pin Dragengine.LoadSave


/**
 * \brief Interface for behaviors supporting compatible persistency.
 * \version 1.5
 * 
 * Compatible persistency behaviors allow BehaviorElement to persist behavior instances in a
 * backward and future expansion compatible way. Such behaviors needs to provide a unique
 * behavior identifier saved together with the behavior instance data. While loading the
 * behavior data is matched by using this behavior identifier.
 * 
 * Furthermore if a behavior data block does not match any behavior all behaviors are asked
 * if they know how to load the behavior data block although not belonging to them. This is
 * required if a user replaces a behavior with another behavior providing the same but
 * enhanced behavior. Typically these behaviors are subclass of the replaced behavior.
 * They can be written to support reading the behavior data block of the super class they
 * enhance to avoid breaking save files if possible.
 */
interface BehaviorCompatiblePersistency
	/**
	 * \brief Unique identifier of behavior.
	 * \version 1.5
	 * 
	 * Has to return a string which is unique in the owner BehaviorElementClass. This string
	 * will be stored while persisting BehaviorElement instances. This allows to assign
	 * restored behavior instance data to the correct behavior instance if present.
	 */
	func String getBehaviorID()
	
	/**
	 * \brief Behavior supports loading instance data of another behavior.
	 * \version 1.5
	 * 
	 * Returns true if this behavior supports loading instance data of another behavior
	 * matching behavior identifier. Called for all behaviors if BehaviorElement encountered
	 * an instance data block with a behavior identifier not matching any behavior instances.
	 */
	func bool supportsBehaviorID(String identifier)
	
	/**
	 * \brief Load instance data of another behavior.
	 * \version 1.5
	 * 
	 * Called if supportsBehaviorID(String) returns true for \em identifier. BehaviorElement
	 * requests behavior to load the supported instance data block into \em instance.
	 */
	func void loadSupportedData(String identifier, PersistencyEnvironment env,\
		FileReader reader, ECBehaviorInstance instance)
end
