/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery

pin Dragengine.LoadSave
pin Dragengine.Preloading


/**
 * \brief Interface for behaviors supporting preinitialization.
 * \version 1.17
 * 
 * Preinitializing allows behaviors to modify StubElement before Element.init() is called.
 * This can be used to alter the behavior initialization procss my modifying the stub
 * properties or textures.
 * 
 * Usually preinitializing is done for elements to be added to a game world. It is thus
 * possible to use game world stub properties to alter the initialization. This can be
 * used to adjust the behavior depending on what game world they are created for. It is
 * also possible preinitialization is done without the element to be added to a specific
 * game world. In this case gameWorld is null. Behaviors added for preinitializing have
 * to be able to handle gameWorld being null.
 */
public interface BehaviorPrepareStub
	/**
	 * \brief Prepare stub.
	 * 
	 * Called by \ref BehaviorElementClass#createAndAddElement(StubElement,GameWorld) with
	 * loading set to false and
	 * \ref BehaviorElementClass#loadAndAddElement(PersistencyEnvironment,StubElement,FileReader,GameWorld)
	 * with loading set to true.
	 */
	func void prepareStub(StubElement stub, GameWorld gameWorld, bool loading)
end
