/*
 * MIT License
 *
 * Copyright (C) 2025, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Scenery

/**
 * \brief Generic BehaviorElementClass with all supported behavior factories added.
 * \version 1.25
 * 
 * Add this class in \ref BaseGameApp#createAndAddElementClasses() to allow creating
 * XML element classes supporting adding behaviors inside the XML file itself.
 * Constructor calls \ref #addBehaviorFactories().
 */
class GenericBehaviorElementClass extends BehaviorElementClass
	/**
	 * \brief Create element class with all behavior factories added.
	 * \see #new(String)
	 */
	func new() this("GenericBehaviorElement")
	end
	
	/**
	 * \brief Create element class with all behavior factories added.
	 * 
	 * Calls \ref #addBehaviorFactories().
	 */
	func new(String className) super(className)
		addBehaviorFactories()
		addAttachableBehaviorFactories()
	end
	
	
	/**
	 * \brief Add behavior factories supported by this element class.
	 * 
	 * Default implementation calls \ref #addDefaultBehaviorFactories().
	 */
	func void addBehaviorFactories()
		addDefaultBehaviorFactories()
	end
	
	/**
	 * \brief Add attachable behavior factories supported by this element class.
	 * \version 1.29
	 * 
	 * Default implementation calls \ref #addDefaultAttachableBehaviorFactories().
	 */
	func void addAttachableBehaviorFactories()
		addDefaultAttachableBehaviorFactories()
	end
	
	
	/** \brief Create copy of element class. */
	func ElementClass duplicateNamed(String classname)
		return GenericBehaviorElementClass.new(classname)
	end
end
