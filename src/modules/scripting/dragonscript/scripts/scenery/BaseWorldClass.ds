/*
 * MIT License
 *
 * Copyright (C) 2025, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Scenery

pin Dragengine.Gui
pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.Utils


/**
 * \brief Base world class.
 * \version 1.26
 * 
 * Contains \ref ECBehaviorWorld to load a world file.
 * 
 * This class is a quick way to load a world file (*.deworld) adding its content to the game world.
 */
class BaseWorldClass extends BehaviorElementClass
	var ECBehaviorWorld pWorld
	
	
	/** \brief Create element class using BaseGameApp parameters. */
	func new() this("BaseWorld", BaseGameApp.getApp().getLoaders(),\
	BaseGameApp.getApp().getIDGenerator())
	end
	
	/** \brief Create element class. */
	func new(Loaders loaders, MutableID idGenerator) this("BaseWorld", loaders, idGenerator)
	end
	
	/** \brief Create element class using loaders from BaseGameApp. */
	func new(String className) this(className, BaseGameApp.getApp().getLoaders(),\
	BaseGameApp.getApp().getIDGenerator())
	end
	
	/** \brief Create element class. */
	func new(String className, Loaders loaders, MutableID idGenerator) super(className)
		pWorld = ECBehaviorWorld.new(this, loaders, idGenerator)
	end
	
	
	/** \brief World behavior. */
	func ECBehaviorWorld getWorld()
		return pWorld
	end
	
	
	func ElementClass duplicateNamed(String classname)
		return BaseWorldClass.new(classname)
	end
	
	protected func Element createElement()
		return BaseWorld.new(this)
	end
end
