/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Scenery


/**
 * \brief Interface for interaction support with base actor actions.
 * 
 * Implementing actions provide a primary and secondary action.
 * 
 * Primary action is the main action the player can carry out. On a computer this is typically
 * the left mouse button. On touch screen based platforms this is typically a tap motion.
 * 
 * Secondary action is an addtional action the player can carry out. On a computer this is
 * typically the right mouse button. On a touch screen based platform this is typically a
 * press motion.
 * 
 * This interface provides the most basic interaction form and is useful for simple player
 * interactions. For more complex interactions create a custom interface providing the
 * desired interactions.
 */
interface BAAInteract
	/** \brief Start primary action. */
	func void primaryActionStart()
	
	/** \brief Stop primary action. */
	func void primaryActionStop()
	
	/** \brief Start secondary action. */
	func void secondaryActionStart()
	
	/** \brief Stop secondary action. */
	func void secondaryActionStop()
end
