/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Utils



/**
 * \brief Message send to console.
 */
class ConsoleMessage
	/** \brief Type. */
	enum Type
		/** \brief Information. */
		info
		
		/** \brief Warning. */
		warning
		
		/** \brief Error. */
		error
	end
	
	
	
	var TimeDate pTimeStamp
	var String pSource
	var String pMessage
	
	
	
	/**
	 * \brief Create message.
	 * \param message The message itself.
	 */
	public func new( String message )
		if message == null
			throw EInvalidParam.new()
		end
		
		this.pTimeStamp = TimeDate.new()
		this.pMessage = message
	end
	
	/**
	 * \brief Create message.
	 * \param source Optional source of message or null if not set.
	 * \param message The message itself.
	 */
	public func new( String source, String message )
		if message == null
			throw EInvalidParam.new()
		end
		
		this.pTimeStamp = TimeDate.new()
		this.pSource = source
		this.pMessage = message
	end
	
	/**
	 * \brief Create message.
	 * \param timeStamp TimeStamp of the message.
	 * \param source Optional source of message or null if not set.
	 * \param message The message itself.
	 */
	public func new( TimeDate timeStamp, String source, String message )
		if message == null or timeStamp == null
			throw EInvalidParam.new()
		end
		
		this.pTimeStamp = timeStamp
		this.pSource = source
		this.pMessage = message
	end
	
	
	
	/** \brief Time stamp of the message. */
	public func TimeDate getTimeStamp()
		return this.pTimeStamp
	end
	
	/** \brief Optional source of message or null if not used. */
	public func String getSource()
		return this.pSource
	end
	
	/** \brief Message send. */
	public func String getMessage()
		return this.pMessage
	end
end
