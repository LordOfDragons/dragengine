/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Utils.StyledText.Definition.Nodes

pin Dragengine.Gui
pin Dragengine.Scenery



/**
 * \brief Span of text in a text node which can have an individual style.
 * 
 * Without a style set the style of the parent text node is used. Optionally an image can
 * be specified which is place to the left of the text.
 */
class STDNTextSpan
	var String pText
	var String pStyle
	var Image pImage
	
	
	
	/** \brief Create styled text definition text node span. */
	func new()
		pText = ""
	end
	
	/** \brief Create styled text definition text node span. */
	func new(String text)
		setText(text)
	end
	
	/** \brief Create styled text definition text node span. */
	func new(String text, String style)
		setText(text)
		setStyle(style)
	end
	
	/** \brief Create styled text definition text node span. */
	func new(String text, Image image)
		setText(text)
		pImage = image
	end
	
	/** \brief Create styled text definition text node span. */
	func new(String text, String style, Image image)
		setText(text)
		setStyle(style)
		pImage = image
	end
	
	/** \brief Create copy of styled text definition text node span. */
	func new(STDNTextSpan span)
		pText = span.pText
		pStyle = span.pStyle
		pImage = span.pImage
	end
	
	
	
	/** \brief Text. */
	func String getText()
		return pText
	end
	
	/** \brief Set text. */
	func void setText(String text)
		if text == null
			throw EInvalidParam.new()
		end
		pText = text
	end
	
	/** \brief Style or \em null to use the parent text node style. */
	func String getStyle()
		return pStyle
	end
	
	/** \brief Set style or \em null to use the parent text node style. */
	func void setStyle(String style)
		pStyle = style
	end
	
	/** \brief Image used as background or null. */
	func Image getImage()
		return pImage
	end
	
	/** \brief Set image used as background or null. */
	func void setImage(Image image)
		pImage = image
	end
end
