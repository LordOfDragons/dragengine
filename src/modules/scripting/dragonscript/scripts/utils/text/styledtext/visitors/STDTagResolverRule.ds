/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Utils.StyledText

pin Dragengine.Utils.StyledText.Definition.Nodes


/**
 * \brief Rule for use with STDTagResolver.
 * \version 1.16
 * 
 * Tags are of the form "{name[:parameters}" where "parameters" is up to the rule to parse.
 */
interface STDTagResolverRule
	/**
	 * \brief Resolve tag adding STDNTextSpan to STDNText.
	 * 
	 * \param resolver STDTagResolver using the rule to resolve.
	 * \param target STDNText to add resolved STDNTextSpan to.
	 * \param source STDNTextSpan containing the tag name to resolve.
	 * \param first First span to be added. Image of source should be set to first added span.
	 * \param parameters Content of tag between curly brackets after ":" delimiter
	 */
	func void resolveTag(STDTagResolver resolver, STDNText target,\
		STDNTextSpan source, bool first, String parameters)
end
