/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui.MainMenus.Interactive

pin Dragengine.Scenery


/**
 * \brief Extended element visitor for interactive main menu.
 * 
 * Extends ElementVisitor to support visiting element classe created for this test
 * project. The prefix TP is used to distinguish the extended element visitor from
 * the super class. Otherwise name conflicts can result.
 * 
 * ElementVisitor forwards visit calls to the visit call matching the parent class.
 * This allows writing generic visitors operating for example on a SimpleElement
 * if they do not need to know what extra features a subclass introduces.
 */
class IMMElementVisitor extends ElementVisitor
	/** \brief Create visitor. */
	public func new()
	end
	
	
	
	/** \brief Visit non-interactive prop. */
	public func void visitProp( IMMProp prop )
		this.visitBehaviorElement( prop )
	end
	
	/** \brief Visit interactive hot-spot. */
	public func void visitHotSpot( IMMHotSpot hotSpot )
		this.visitProp( hotSpot )
	end
	
	/** \brief Visit camera spot. */
	public func void visitCameraSpot( IMMCameraSpot cameraSpot )
		this.visitElement( cameraSpot )
	end
	
	/** \brief Visit light. */
	public func void visitLight( IMMLight light )
		this.visitBehaviorElement( light )
	end
	
	/** \brief Visit speaker. */
	public func void visitSpeaker( IMMSpeaker speaker )
		this.visitBehaviorElement( speaker )
	end
	
	/** \brief Visit particle emitter. */
	public func void visitParticleEmitter( IMMParticleEmitter particleEmitter )
		this.visitBehaviorElement( particleEmitter )
	end
	
	/** \brief Visit environment map probe. */
	public func void visitEnvironmentMap( IMMEnvironmentMap environmentMap )
		this.visitElement( environmentMap )
	end
end
