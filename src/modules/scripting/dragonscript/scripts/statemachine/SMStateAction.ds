/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.StateMachineSystem

pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * \brief Action to run in a state machine state.
 * 
 * SMAction subclasses are created by the game developer and added to the state machine.
 * If state action is run the action is looked up and run.
 * 
 * For performance reasons the action is looked up once then stored in the state.
 */
class SMStateAction
	/** \brief Action identifier. */
	private var String pActionID
	
	/** \brief Action or \em null if not cached. */
	private var SMAction pAction
	
	/** \brief Parameters as Dictionary of type String key and String value. */
	private var Dictionary pParameters
	
	
	
	/** \brief Create behavior tree rule. */
	public func new( String actionID )
		if actionID == null
			throw ENullPointer.new()
		end
		this.pActionID = actionID
		this.pParameters = Dictionary.new()
	end
	
	
	
	/** \brief Action identifier. */
	public func String getActionID()
		return this.pActionID
	end
	
	/** \brief Action or \em null if not cached. */
	public func SMAction getAction()
		return this.pAction
	end
	
	/**
	 * \brief Parameters as Dictionary of type String key and String value.
	 * \warning Do not change the content of the dictionary as it is shared.
	 */
	public func Dictionary getParameters()
		return this.pParameters
	end
	
	
	
	/** \brief Run action. */
	public func void run( SMContext context )
		if this.pAction == null
			this.pAction = context.getAction( this.pActionID )
		end
		
		if this.pAction != null
			this.pAction.runAction( context, this.pParameters )
		end
	end
end
