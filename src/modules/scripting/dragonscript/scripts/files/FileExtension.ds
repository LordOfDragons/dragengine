/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine


/**
 * \brief File extension for use with file browsers.
 * \version 1.7
 * 
 * Immutable class.
 */
class FileExtension
	private var String pName
	private var Array pPatterns
	private var String pDefaultExtension
	
	
	/** \brief Create file type. */
	public func new(String name, Array patterns, String defaultExtension)
		if name == null
			throw ENullPointer.new("name")
		end
		if patterns == null
			throw ENullPointer.new("patterns")
		end
		if defaultExtension == null
			throw ENullPointer.new("defaultExtension")
		end
		
		pName = name
		pPatterns = patterns
		pDefaultExtension = defaultExtension
	end
	
	
	
	/** \brief Name to display. */
	public func String getName()
		return pName
	end
	
	/** \brief Array of file pattern strings in the form ".xyz". */
	public func Array getPatterns()
		return pPatterns
	end
	
	/**
	 * \brief File pattern as single string typically used in file browsers.
	 * 
	 * Returned string is in the form "*.abc,*.xyz,...".
	 */
	public func String getPatternsString()
		return getPatternsString(",")
	end
	
	/**
	 * \brief File pattern as single string typically used in file browsers.
	 * 
	 * Returned string is in the form "*.abc{delimiter}*.xyz,..." where "{delimiter}" is
	 * the string provided by delimiter. "*" is only prepended if pattern starts with a period.
	 */
	public func String getPatternsString(String delimiter)
		if pPatterns.getCount() == 0
			return ""
		end
		
		return pPatterns.map(block String each
			return each.startsWith(".") if "*" + each else each
		end).fold(block String a, String b
			return a + delimiter + b
		end) cast String
	end
	
	/** \brief Default file extension in the form ".xyz". */
	public func String getDefaultExtension()
		return pDefaultExtension
	end
	
	
	
	/**
	 * String representation suitable for file dialogs. Returns string in the form
	 * "{getName()} ({getPatternsString()})".
	 */
	public func String toString()
		return pName + " (" + getPatternsString() + ")"
	end
end
