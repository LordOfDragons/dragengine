/* 
 * Drag[en]gine DragonScript Script Module
 *
 * Copyright (C) 2021, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Dragengine


/**
 * \brief File extension for use with file browsers.
 * \version 1.7
 * 
 * Immutable class.
 */
class FileExtension
	private var String pName
	private var Array pPatterns
	private var String pDefaultExtension
	
	
	/** \brief Create file type. */
	public func new(String name, Array patterns, String defaultExtension)
		if name == null
			throw ENullPointer.new("name")
		end
		if patterns == null
			throw ENullPointer.new("patterns")
		end
		if defaultExtension == null
			throw ENullPointer.new("defaultExtension")
		end
		
		pName = name
		pPatterns = patterns
		pDefaultExtension = defaultExtension
	end
	
	
	
	/** \brief Name to display. */
	public func String getName()
		return pName
	end
	
	/** \brief Array of file pattern strings in the form ".xyz". */
	public func Array getPatterns()
		return pPatterns
	end
	
	/**
	 * \brief File pattern as single string typically used in file browsers.
	 * 
	 * Returned string is in the form "*.abc,*.xyz,...".
	 */
	public func String getPatternsString()
		return getPatternsString(",")
	end
	
	/**
	 * \brief File pattern as single string typically used in file browsers.
	 * 
	 * Returned string is in the form "*.abc{delimiter}*.xyz,..." where "{delimiter}" is
	 * the string provided by delimiter.
	 */
	public func String getPatternsString(String delimiter)
		if pPatterns.getCount() == 0
			return ""
		end
		
		return pPatterns.map(block String each
			return "*" + each
		end).fold(block String a, String b
			return a + delimiter + b
		end) cast String
	end
	
	/** \brief Default file extension in the form ".xyz". */
	public func String getDefaultExtension()
		return pDefaultExtension
	end
	
	
	
	/** String representation. Returns same value as getName(). */
	public func String toString()
		return pName
	end
end
