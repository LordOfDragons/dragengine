/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Gui


/**
 * \brief CanvasPaint shape.
 */
enum CanvasPaintShape
	/**
	 * \brief Points of radius \em thickness.
	 * 
	 * Add N points to render N points.
	 */
	points
	
	/**
	 * \brief Disconnected line segments.
	 * 
	 * Add N*2 points to render N disconnected line segments.
	 */
	lines
	
	/**
	 * \brief Filled or empty rectangle.
	 * 
	 * The width and height of the rectangle matches the canvas size rendering
	 * a rectangle filling the entire canvas. The round corners parameters
	 * define the percentag of rounding with 0 no rounding and 1 full rounding
	 * upp the way to the center axis.
	 */
	rectangle
	
	/**
	 * \brief Filled or empty ellipse.
	 * 
	 * The radi of the ellipse matches the size of the canvas to fill entire
	 * canvas. If the start and end angle are equal the ellipse is closed
	 * otherwise it is open with the end points connected by a straight line.
	 * If ellipse is open and \em fillColor is not transparent the ellipse is
	 * filled up to the connection line between the two end points.
	 */
	ellipse
	
	/**
	 * \brief Filled or empty pie.
	 * 
	 * Same definition as deCanvasPaint::estEllipse with the difference that in
	 * the open case a connection line is drawn from one end point to the other
	 * across the center point.
	 */
	pie
	
	/**
	 * \brief Open or closed filled or empty polygon.
	 * 
	 * Add N points to render a polygon with N corners. At least 2 points are
	 * required for the outline of the polygon to be rendered. At least 3 points
	 * are required for the polygon to be filled if \em fillColor is not
	 * transparent. The points have to be oriented clockwise. The polygon is not
	 * required to be convex. If the last point is equal to the first point the
	 * polygon is closed otherwise open. If the polygon is open it is filled up
	 * to the straight connection line between the two end points.
	 */
	polygon
end
