/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Audio.SynthesizerDefinition

pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * \brief Definition of an synthesizer link.
 * 
 * Once defined a link can be added to an synthesizer using the stored definition.
 * 
 */
class SDLink
	/** \brief Name. */
	private var String pName
	
	/** \brief Curve. */
	private var CurveBezier pCurve
	
	/** \brief Controller. */
	private var SDController pController
	
	/** \brief Repeat count along X axis. */
	private var int pRepeat
	
	/** \brief Index of the link in the synthesizer. */
	private var int pIndex
	
	
	
	/** \brief Create link definition. */
	public func new()
		this.pName = ""
		this.pCurve = CurveBezier.new()
		this.pIndex = 0
		this.pRepeat = 1
	end
	
	
	
	/** \brief Name. */
	public func String getName()
		return this.pName
	end
	
	/** \brief Set name. */
	public func void setName( String name )
		this.pName = name
	end
	
	/** \brief Controller or \em null if not set. */
	public func SDController getController()
		return this.pController
	end
	
	/** \brief Set controller or \em null if not set. */
	public func void setController( SDController controller )
		this.pController = controller
	end
	
	/** \brief Repeat count along X axis. */
	public func int getRepeat()
		return this.pRepeat
	end
	
	/** \brief Set repeat along X axis. */
	public func void setRepeat( int repeat )
		this.pRepeat = repeat
	end
	
	/** \brief Curve. */
	public func CurveBezier getCurve()
		return this.pCurve
	end
	
	/** \brief Set curve. */
	public func void setCurve( CurveBezier curve )
		this.pCurve = curve
	end
	
	
	
	/** \brief Index of link in synthesizer. */
	public func int getIndex()
		return this.pIndex
	end
	
	
	
	/** \brief Add link to synthesizer using the stored definition. */
	public func void addToSynthesizer( Synthesizer synthesizer )
		if synthesizer == null
			throw EInvalidParam.new()
		end
		
		if this.pController == null
			this.pIndex = synthesizer.addLink( -1 )
			
		else
			this.pIndex = synthesizer.addLink( this.pController.getIndex() )
		end
		
		synthesizer.linkSetRepeat( this.pIndex, this.pRepeat )
		synthesizer.linkSetCurve( this.pIndex, this.pCurve )
	end
	
	
	
	public func void debug( Console console, int index )
		this.pIndex = index
		
		console.addMessage( "- Link " + index + " (name=" + this.pName + " controller=" \
			+ ( this.pController == null if -1 else this.pController.getIndex() ) \
			+ " repeat=" + this.pRepeat + ")" )
	end
	
end
