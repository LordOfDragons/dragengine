/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Audio.SynthesizerDefinition

pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * \brief Definition of synthesizer source.
 * 
 * Once defined a source can be added to an synthesizer using the stored definition.
 * 
 */
class SDSourceChain extends SDSource
	/** \brief Sounds. */
	private var Array pSounds
	
	/** \brief Minimum speed. */
	private var float pMinSpeed
	
	/** \brief Maximum speed. */
	private var float pMaxSpeed
	
	
	
	/** \brief Create synthesizer source definition. */
	public func new()
		this.pSounds = Array.new()
		this.pMinSpeed = 1.0
		this.pMaxSpeed = 1.0
	end
	
	
	
	/** \brief Sounds as array of Sound. */
	public func Array getSounds()
		return this.pSounds
	end
	
	/** \brief Minimum speed. */
	public func float getMinSpeed()
		return this.pMinSpeed
	end
	
	/** \brief Set minimum speed. */
	public func void setMinSpeed( float speed )
		this.pMinSpeed = speed
	end
	
	/** \brief Maximum speed. */
	public func float getMaxSpeed()
		return this.pMaxSpeed
	end
	
	/** \brief Set maximum speed. */
	public func void setMaxSpeed( float speed )
		this.pMaxSpeed = speed
	end
	
	
	
	/**
	 * \brief Build engine synthesizer source using the stored definition.
	 */
	public func SynthesizerSource buildSource( Synthesizer synthesizer )
		var SSChain source = SSChain.new()
		
		this.buildSourceCommon( synthesizer, source )
		
		this.forEachTarget( block SDSourceTargetLink each
			source.targetAddLink( each.getTarget() cast SSChainTarget, each.getLink().getIndex() )
		end )
		
		this.pSounds.forEach( block Sound each
			source.addSound( each )
		end )
		source.setMinSpeed( this.pMinSpeed )
		source.setMaxSpeed( this.pMaxSpeed )
		
		return source
	end
	
	
	
	public func void debug( Console console )
		console.addMessage( this.debugCommon( console, "Sounds" ) + " sounds=" \
			+ this.pSounds.getCount() + " speed=" + this.pMinSpeed + "-" + this.pMaxSpeed + ")" )
	end
end
