/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

namespace Dragengine.Audio.DynamicMusic

pin Dragengine.Gui
pin Dragengine.Scenery



/**
 * \brief Dynamic music switch.
 *
 * Used by transitions to figure out which part to play next. Switches are boolean
 * and can be \em on or \em off.
 * 
 */
class DynamicMusicSwitch
	/** \brief Name. */
	private var String pName
	
	/** \brief State. */
	private var bool pState
	
	
	
	/** \brief Create dynamic music switch. */
	public func new( String name )
		if name.empty()
			throw EInvalidParam.new()
		end
		
		this.pName = name
		this.pState = false
	end
	
	
	
	/** \brief Name. */
	public func String getName()
		return this.pName
	end
	
	/** \brief State. */
	public func bool getState()
		return this.pState
	end
	
	/** \brief Set state. */
	public func void setState( bool state )
		this.pState = state
	end
end
