/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Commands

pin Dragengine.Gui


/**
 * \brief Toggle console command.
 * 
 * Shows or hides a WindowConsole provided at construction time. The command is designed to
 * be used with BaseGameApp and in-game situations using BindingInputProcessor since this
 * command can be only triggered by a binding or the console window itself. If the window is
 * shown BaseGameApp.setInputProcessDesktop() is called and the window raised to the top.
 * If the window is hidden BaseGameApp.setInputProcessBindings() is called.
 * 
 * While creating the command registers itself with the console window as the command to run
 * when the user tries to close the window by pressing Escape key.
 */
class CommandToggleConsole extends Command
	/** \brief Console window to show and hide. */
	private var WindowConsole pWindow
	
	
	
	/** \brief Create command. */
	public func new(WindowConsole window)
		if window == null
			throw EInvalidParam.new()
		end
		
		pWindow = window
		
		setName("toggleConsole")
		setDescription("Toggle console")
		setTranslateDescription("UI.Command.ToggleConsole.Description")
		setTranslateDisplayName("UI.Command.ToggleConsole.DisplayName")
		
		window.setCommandCloseConsole(this)
	end
	
	
	
	/** \brief Console window to show and hide. */
	public func WindowConsole getWindow()
		return pWindow
	end
	
	/** \brief Set console window to show and hide. */
	public func void setWindow(WindowConsole window)
		if window == null
			throw EInvalidParam.new()
		end
		pWindow = window
	end
	
	
	
	/**
	 * \brief Input key or button has been released.
	 * 
	 * Done during stop() not start() since showing the console activates a new input
	 * processor which would cause KEY_RELEASE to be send to the console causing an
	 * unwanted typing in the input field.
	 */
	public func void stop()
		if pWindow.getVisible()
			pWindow.setVisible(false)
			BaseGameApp.getApp().setInputProcessorBindings()
			
		else
			pWindow.setVisible(true)
			BaseGameApp.getApp().setInputProcessorDesktop()
		end
	end
end
