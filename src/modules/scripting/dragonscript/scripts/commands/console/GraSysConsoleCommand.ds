/*
 * MIT License
 *
 * Copyright (C) 2024, DragonDreams GmbH (info@dragondreams.ch)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


namespace Dragengine.Commands

pin Dragengine.Utils


/**
 * \brief Graphic system console command.
 */
class GraSysConsoleCommand extends SystemConsoleCommand
	/** \brief Create console command. */
	public func new() super( "graphicSystem", "Graphic System", GraSysParamWrapper.new() )
		this.setSyntax( this.getSyntax() + \
			"   setWindowGeometry <width> <height> <fullScreen> => sets the window geometry\n" + \
			"   setWindowTitle <title> => sets the window title\n" )
	end
	
	
	
	/**
	 * \brief Execute command.
	 * 
	 * Default implementation prints syntax to console.
	 * 
	 * \param console Console to send output to.
	 * \param params List of parameters. Has to match command syntax.
	 */
	public func void execute( Console console, Array params )
		if params.getCount() == 0
			console.addMessage( this.getSyntax() )
			return
		end
		
		if params.getAt( 0 ).equals( "setWindowGeometry" )
			if params.getCount() < 4 
				console.addMessage( "invalid parameters" )
				return
			end
			
			var int width = params.getAt( 1 ).toString().toInt()
			var int height = params.getAt( 2 ).toString().toInt()
			var bool fullScreen = not params.getAt( 3 ).equals( "0" )
			
			try
				GraphicSystem.setWindowGeometry( width, height, fullScreen )
				
			catch Exception e
				console.addMessage( "setting window geometry failed" )
			end
			
		elif params.getAt( 0 ).equals( "setWindowTitle" )
			if params.getCount() < 2
				console.addMessage( "invalid parameters" )
				return
			end
			
			var String paramName = params.getAt( 1 ).toString()
			
			try
				GraphicSystem.setWindowTitle( paramName )
				
			catch Exception e
				console.addMessage( "setting window title failed" )
			end
			
		else
			super.execute( console, params )
		end
	end
end
