//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
//                 This is a native class documentation                         //
//                                                                              //
//                  This file is used only for DoxyGen                          //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

namespace Dragengine

pin Dragengine.Gui
pin Dragengine.Scenery


/**
 * \brief Graphic system.
 * 
 * This is a native class. This is a pure static class. The class can not be instantiated
 */
fixed class GraphicSystem
	/** \name Management */
	/*@{*/
	/**
	 * \brief X position in pixel of render window.
	 * \version 1.24
	 */
	public static func int getWindowX()
		return 0
	end
	
	/**
	 * \brief Y position in pixel of render window.
	 * \version 1.24
	 */
	public static func int getWindowY()
		return 0
	end
	
	/**
	 * \brief Position in pixel of render window.
	 * \version 1.24
	 */
	public static func Point getWindowPosition()
		return null
	end
	
	/** \brief Width in pixel of render window. */
	public static func int getWindowWidth()
		return 0
	end
	
	/** \brief Height in pixel of the render window. */
	public static func int getWindowHeight()
		return 0
	end
	
	/** \brief Size in pixels of render window. */
	public static func Point getWindowSize()
		return null
	end
	
	/** \brief Set render window geometry. */
	public static func void setWindowGeometry( int width, int height, bool fullScreen )
	end
	
	/**
	 * \brief Set render window geometry.
	 * \version 1.24.
	 */
	public static func void setWindowGeometry(int x, int y, int width, int height, bool fullScreen)
	end
	
	/** \brief Set render window title. */
	public static func void setWindowTitle( String title )
	end

	/**
	 * \brief Global scale factor of render window.
	 * \version 1.24
	 * 
	 * Scaling factor is returned as integer scaling factor where 100 indicates 100%.
	 */
	public static func int getWindowScaleFactor()
		return 0
	end

	/**
	 * \brief Global scale factor of render window.
	 * \version 1.24
	 * 
	 * Scaling factor is returned as floating point scaling factor.
	 */
	public static func float getWindowScaleFactorFloat()
		return 0.0
	end
	
	/** \brief Primary canvas view. */
	public static func CanvasView getPrimaryCanvas()
		return null
	end
	/*@}*/
	
	
	
	/** \name Parameters */
	/*@{*/
	/** \brief Number of parameters available. */
	public static func int getParameterCount()
		return 0
	end
	
	/**
	 * \brief Parameter information.
	 * \throws EOutOfBoundary \em index less than 0 or greater than or equal to getParameterCount().
	 */
	public static func ModuleParameter getParameterInfo( int index )
		return null
	end
	
	/** \brief Named parameter information or \em null if not found. */
	public static func ModuleParameter getParameterInfo( String name )
		return null
	end
	
	/**
	 * \brief Parameter value.
	 * \throws EInvalidParam Parameter with name not found.
	 */
	public static func String getParameterValue( String name )
		return null
	end
	
	/**
	 * \brief Set named parameter value.
	 * \throws EInvalidParam Parameter with name not found.
	 */
	public static func void setParameterValue( String name, String value )
	end
	
	/** \brief Send command. */
	public static func String sendCommand( String command )
		return null
	end
	
	/**
	 * \brief Frame-per-second rate averaged over the last couple of frames.
	 * \version 1.6
	 * 
	 * Returns 0 if module is not using a separate thread.
	 */
	public static func int getFPSRate()
		return 0
	end
	
	/**
	 * \brief Set position and orientation of VR debug panel if graphic module shows one.
	 * \version 1.17
	 * 
	 * The debug panel is usually shown if the user looks at the back of his right hand
	 * like looking at a wrist watch. The position is the center of the debug panel with
	 * the size determined by the graphic module. The matrix defined by the orientation
	 * lines up with the panel like this:
	 * - matrix right vector along panel right direction
	 * - matrix up vector along panel down direction
	 * - matrix forward vector pointing towards the user
	 */
	public static func void setVRDebugPanelPosition( DVector position, Quaternion orientation )
	end
	/*@}*/
end
