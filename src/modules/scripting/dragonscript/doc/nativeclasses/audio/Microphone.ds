//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
//                 This is a native class documentation                         //
//                                                                              //
//                  This file is used only for DoxyGen                          //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

namespace Dragengine.Scenery

/**
 * \brief Microphone.
 * 
 * This is a native class.
 */
class Microphone
	/** \name Constructors */
	/*@{*/
	/** \brief Create microphone. */
	func new()
	end
	/*@}*/
	
	
	
	/** \name Management */
	/*@{*/
	/** \brief Type. */
	func MicrophoneType getType()
		return null
	end
	
	/** \brief Set type. */
	func void setType(MicrophoneType type)
	end
	
	/** \brief Position. */
	func DVector getPosition()
		return null
	end
	
	/** \brief Set position. */
	func void setPosition(DVector position)
	end
	
	/** \brief Orientation. */
	func Quaternion getOrientation()
		return null
	end
	
	/** \brief Set orientation. */
	func void setOrientation(Quaternion orientation)
	end
	
	/** \brief Velocity in m/s. */
	func Vector getVelocity()
		return null
	end
	
	/** \brief Set velocity in m/s. */
	func void setVelocity(Vector velocity)
	end
	
	
	
	/** \brief Microphone is muted. */
	func bool getMuted()
		return false
	end
	
	/** \brief Set if microphone is muted. */
	func void setMuted(bool muted)
	end
	
	/** \brief Volume. */
	func float getVolume()
		return 0.0
	end
	
	/** \brief Set volume. */
	func void setVolume(float volume)
	end
	
	/** \brief Layer mask for visibility masking. */
	func LayerMask getLayerMask()
		return null
	end
	
	/** \brief Set layer mask for visibility masking. */
	func void setLayerMask(LayerMask layerMask)
	end
	
	/**
	 * \brief Gain to multiply all speakers with.
	 * \version 1.16
	 */
	func float getSpeakerGain()
		return 0.0
	end
	
	/**
	 * \brief Set gain to multiply all speakers with.
	 * \version 1.16
	 */
	func void setSpeakerGain(float gain)
	end
	
	/** \brief Parent world or \em null if not added to a world. */
	func World getParentWorld()
		return null
	end
	
	
	
	/**
	 * \brief Enable auralization if supported.
	 * \version 1.23
	 */
	func bool getEnableAuralization()
		return false
	end
	
	/**
	 * \brief Set to enable auralization if supported.
	 * \version 1.23
	 */
	func void setEnableAuralization(bool enable)
	end
	/*@}*/
	
	
	
	/** \name Speakers */
	/*@{*/
	/** \brief Add speaker. */
	func void addSpeaker(Speaker speaker)
	end
	
	/**
	 * \brief Remove speaker.
	 * \throws EInvalidParam \em speaker is absent.
	 */
	func void removeSpeaker(Speaker speaker)
	end
	
	/** \brief Remove all speakers. */
	func void removeAllSpeakers()
	end
	/*@}*/
end
