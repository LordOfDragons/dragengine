//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
//                 This is a native class documentation                         //
//                                                                              //
//                  This file is used only for DoxyGen                          //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

namespace Dragengine.Scenery

/**
 * \brief Animator rule mirror.
 * \version 1.9
 * 
 * This is a native class. It can not be subclassed.
 */
class ARMirror extends AnimatorRule
	/** \name Constructors */
	/*@{*/
	/** \brief Create animator rule. */
	public func new()
	end
	/*@}*/
	
	
	
	/** \name Management */
	/*@{*/
	/**
	 * \brief Set mirror axis.
	 * \throws EInvalidParam \em axis is not a valid value.
	 */
	public func void setMirrorAxis(ARMirrorMirrorAxis axis)
	end
	
	/** \brief Set mirror bone. */
	public func void setMirrorBone(String boneName)
	end
	
	/**
	 * \brief Add match bone name.
	 * \throws EInvalidParam \em first is empty string.
	 * \throws EInvalidParam \em second is empty string.
	 * \throws EInvalidParam \em type is not a valid value.
	 */
	public func void addMatchName(String first, String second, ARMirrorMatchNameType type)
	end
	
	
	
	/** \brief Enable position modification. */
	public func void setEnablePosition(bool enabled)
	end
	
	/** \brief Enable orientation modification. */
	public func void setEnableOrientation(bool enabled)
	end
	
	/** \brief Enable size modification. */
	public func void setEnableSize(bool enabled)
	end
	
	/**
	 * \brief Enable vertex position set modification.
	 * \version 1.17
	 */
	public func void setEnableVertexPositionSet(bool enabled)
	end
	
	
	
	/**
	 * \brief Add link to target.
	 * \throws EInvalidParam \em target is not a valid value.
	 */
	public func void targetAddLink(ARMirrorTarget target, int link)
	end
	
	/**
	 * \brief Remove all links from target.
	 * \throws EInvalidParam \em target is not a valid value.
	 */
	public func void targetRemoveAllLinks(ARMirrorTarget target)
	end
	/*@}*/
end
