//////////////////////////////////////////////////////////////////////////////////
//                                                                              //
//                 This is a native class documentation                         //
//                                                                              //
//                  This file is used only for DoxyGen                          //
//                                                                              //
//////////////////////////////////////////////////////////////////////////////////

namespace Dragengine.Scenery

/**
 * \brief Immutable 3x2-component row major texture matrix.
 * 
 * This is a native class. It can not be subclassed.
 */
fixed class TexMatrix2
	/** \name Constructors */
	/*@{*/
	/** \brief Create identity texture matrix. */
	public func new()
	end
	
	/** \brief Create copy of a texture matrix. */
	public func new( TexMatrix2 matrix )
	end
	
	/** \brief Create translation texture matrix. */
	public static func TexMatrix2 newTranslation( Vector2 translation )
		return null
	end
	
	/** \brief Create translation texture matrix. */
	public static func TexMatrix2 newTranslation( float u, float v )
		return null
	end
	
	/** \brief Create scaling texture matrix. */
	public static func TexMatrix2 newScaling( Vector2 scaling )
		return null
	end
	
	/** \brief Create scaling texture matrix. */
	public static func TexMatrix2 newScaling( float u, float v )
		return null
	end
	
	/** \brief Create rotation texture matrix. */
	public static func TexMatrix2 newRotation( float rotation )
		return null
	end
	
	/** \brief Create shearing texture matrix. */
	public static func TexMatrix newShear( Vector2 shear )
		return null
	end
	
	/** \brief Create shearing texture matrix. */
	public static func TexMatrix newShear( float u, float v )
		return null
	end
	
	/** \brief Create scaling-translation texture matrix composing of a scaling followed by a translation. */
	public static func TexMatrix2 newST( Vector2 scaling, Vector2 translation )
		return null
	end
	
	/** \brief Create scaling-translation texture matrix composing of a scaling followed by a translation. */
	public static func TexMatrix2 newST( float scalingU, float scalingV, float translationU, float translationV )
		return null
	end
	
	/** \brief Create scaling-rotation-translation texture matrix composing of a scaling followed by a rotation and a translation. */
	public static func TexMatrix2 newSRT( Vector2 scaling, float rotation, Vector2 translation )
		return null
	end
	
	/** \brief Create scaling-rotation-translation texture matrix composing of a scaling followed by a rotation and a translation. */
	public static func TexMatrix2 newSRT( float scalingU, float scalingV, float rotation, float translationU, float translationV )
		return null
	end
	
	/**
	 * \brief Create centere scaling-rotation-translation texture matrix.
	 * 
	 * Composing of a scaling followed by a rotation and a translation. Similar to newSRT but the
	 * coordinate system is first shifted to the center of the texture (0.5,0.5) before
	 * scale-rotate-translation is applied.
	 */
	public static func TexMatrix2 newCenterSRT( Vector2 scaling, float rotation, Vector2 translation )
		return null
	end
	
	/**
	 * \brief Create centere scaling-rotation-translation texture matrix.
	 * 
	 * Composing of a scaling followed by a rotation and a translation. Similar to newSRT but the
	 * coordinate system is first shifted to the center of the texture (0.5,0.5) before
	 * scale-rotate-translation is applied.
	 */
	public static func TexMatrix2 newCenterSRT( float scalingU, float scalingV, float rotation, float translationU, float translationV )
		return null
	end
	/*@}*/
	
	
	
	/** \name Management */
	/*@{*/
	/**
	 * \brief Value at row and colon.
	 * \throws EInvalidParam \em row is less than 0 or larger than 1.
	 * \throws EInvalidParam \em col is less than 0 or larger than 2.
	 */
	public func float getAt( int row, int col )
		return 0.0
	end
	
	/** \brief Value at (1,1). */
	public func float get11()
		return 0.0
	end
	
	/** \brief Value at (1,2). */
	public func float get12()
		return 0.0
	end
	
	/** \brief Value at (1,3). */
	public func float get13()
		return 0.0
	end
	
	/** \brief Value at (2,1). */
	public func float get21()
		return 0.0
	end
	
	/** \brief Value at (2,2). */
	public func float get22()
		return 0.0
	end
	
	/** \brief Value at (2,3). */
	public func float get23()
		return 0.0
	end
	
	
	
	/**
	 * \brief Texture matrix is equal to another object.
	 * \details Implements Object.equals(Object).
	 * \returns \em true if \em other is of type TexMatrix2 and components are equal.
	*/
	public func bool equals( Object other )
		return false
	end
	
	/**
	 * \brief Hash code for use as dictionary keys.
	 * \details Implements Object.hashCode().
	 */
	public func int hashCode()
		return 0
	end
	
	/**
	 * \brief String representation of texture matrix.
	 * \details Implements Object.toString()
	 */
	public func String toString()
		return null
	end
	/*@}*/
	
	
	
	/** \name File Handling */
	/*@{*/
	/** \brief Read texture matrix from a file reader. */
	static public func TexMatrix2 readFromFile( FileReader reader )
		return null
	end
	
	/** \brief Write texture matrix to a file writer. */
	public func void writeToFile( FileWriter writer )
	end
	/*@}*/
	
	
	
	/** \name Operators */
	/*@{*/
	/** \brief Sum of matrix with another texture matrix. */
	public func TexMatrix2 +( TexMatrix2 matrix )
		return null
	end
	
	/** \brief Difference of matrix and another texture matrix. */
	public func TexMatrix2 -( TexMatrix2 matrix )
		return null
	end
	
	/** \brief Texture matrix multiplied by a factor. */
	public func TexMatrix2 *( float k )
		return null
	end
	
	/**
	 * \brief Texture matrix divided by a factor.
	 * \throws EDivisionByZero \em scalar is \em 0.
	 */
	public func TexMatrix2 /( float k )
		return null
	end
	
	/**
	 * \brief Texture matrix multiplied by another texture matrix.
	 * \details The textures are added a (0,0,1) row before multiplication. The returned
	 *          texture matrix composes of the the upper 3x2 part of the multiplied matrix
	 */
	public func TexMatrix2 *( TexMatrix2 matrix )
		return null
	end
	
	/** \brief Vector transformed by texture matrix. */
	public func Vector2 *( Vector2 texcoord )
		return null
	end
	
	/** \brief Vector transformed by texture matrix. */
	public func Vector2 *( float u, float v )
		return null
	end
	/*@}*/
end
